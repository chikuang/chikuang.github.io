<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Chi-Kuang Yeh/ËëâÂïìÂÖâ</title>
    <link>https://chikuang.github.io/tags/r/</link>
    <description>Recent content in R on Chi-Kuang Yeh/ËëâÂïìÂÖâ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jun 2025 11:34:53 -0400</lastBuildDate>
    <atom:link href="https://chikuang.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimal Regression Design</title>
      <link>https://chikuang.github.io/resources/opt_design/</link>
      <pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://chikuang.github.io/resources/opt_design/</guid>
      <description>Introduction to Optimal Regression Design In statistical modeling, especially in regression analysis, we often face the question:&#xA;‚ÄúWhere and how should we collect data to obtain the most accurate parameter estimates?‚Äù&#xA;This question is answered by Optimal Experimental Design, a field that seeks to identify the best sampling scheme under a specified statistical model.&#xA;üéØ General Objective Let the model be a linear regression:&#xA;\[ Y_i = \mathbf{f}(x_i)^\top \boldsymbol{\beta} + \varepsilon_i,\quad \varepsilon_i \sim \mathcal{N}(0, \sigma^2) \] where:</description>
    </item>
    <item>
      <title>Example R Markdown Post</title>
      <link>https://chikuang.github.io/resources/example-rmarkdown/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://chikuang.github.io/resources/example-rmarkdown/</guid>
      <description>Using R Markdown for Blog Posts This is an example of how to use R Markdown to create blog posts with executable R code.&#xA;Example Plot Let‚Äôs create a simple visualization:&#xA;# Create some sample data set.seed(123) data &amp;lt;- data.frame( x = 1:100, y = cumsum(rnorm(100)) ) # Create a plot ggplot(data, aes(x = x, y = y)) + geom_line(color = &amp;quot;steelblue&amp;quot;, size = 1) + geom_smooth(method = &amp;quot;loess&amp;quot;, se = TRUE) + theme_minimal() + labs(title = &amp;quot;Random Walk with Trend Line&amp;quot;, x = &amp;quot;Time&amp;quot;, y = &amp;quot;Value&amp;quot;) Tables You can also create nice tables:</description>
    </item>
  </channel>
</rss>
