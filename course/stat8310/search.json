[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "",
    "text": "Preface",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Description",
    "text": "Description\nThis course will cover the topics in the theory and practice of Bayesian statistical inference, ranging from a review of fundamentals to questions of current research interest. Motivation for the Bayesian approach. Bayesian computation, Monte Carlo methods, asymptotics. Model checking and comparison. A selection of examples and issues in modeling and data analysis. Discussion of advantages and difficulties of the Bayesian approach. This course will be computationally intensive through analysis of data sets using the R statistical computing language.\n\nPrerequisites\nMATH 4752/6752 – Mathematical Statistics II or equivalent, and the ability to program in a high-level language.\n\n\nInstructor\nChi-Kuang Yeh, I am an Assistant Professor in the Department of Mathematics and Statistics, Georgia State University.\n\nOffice: Suite 1407, 25 Park Place.\nEmail: cyeh@gsu.edu.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#office-hour",
    "href": "index.html#office-hour",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Office Hour",
    "text": "Office Hour\nTBA",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#grade-distribution",
    "href": "index.html#grade-distribution",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Grade Distribution",
    "text": "Grade Distribution\n\nTBA",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#assignment",
    "href": "index.html#assignment",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Assignment",
    "text": "Assignment\n\nTBA",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#midterm",
    "href": "index.html#midterm",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Midterm",
    "text": "Midterm\n\nTBA",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#topics-and-corresponding-lectures",
    "href": "index.html#topics-and-corresponding-lectures",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Topics and Corresponding Lectures",
    "text": "Topics and Corresponding Lectures\nThose chapters are based on the lecture notes. This part will be updated frequently.\n\n\n\nTopic\nLecture Covered\n\n\n\n\nIntroduction to R Programming\n1–2",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#recommended-textbooks",
    "href": "index.html#recommended-textbooks",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Recommended Textbooks",
    "text": "Recommended Textbooks\n\nGelman, A., Carlin, J., Stern, H., Rubin, D., Dunson, D., and Vehtari, A. (2021). Bayesian Data Analysis, CRC Press, 3rd Ed.\nHoff, P.D. (2009). A First Course in Bayesian Statistical Methods, Springer.\nMcElreath, R. (2018). Statistical Rethinking: A Bayesian Course with Examples in R and Stan, CRC Press.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#side-readings",
    "href": "index.html#side-readings",
    "title": "Stat8310 - Applied Bayesian Statistics",
    "section": "Side Readings",
    "text": "Side Readings\n\nTBA",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Why Bayesian?\nThe posterior distribution is obtained from the prior distribution and sampling model via Bayes’ rule:\n\\[p(\\theta \\mid y)=\\frac{p(y \\mid \\theta) p(\\theta)}{\\int_{\\Theta} p(y \\mid \\tilde{\\theta}) p(\\tilde{\\theta}) d \\tilde{\\theta}}.\\]\nThis is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "week01.html",
    "href": "week01.html",
    "title": "2  Week 1 — Introduction to Bayesian Thinking",
    "section": "",
    "text": "2.1 Lecture 1: Motivation and Philosophy of the Bayesian Approach",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Week 1 — Introduction to Bayesian Thinking</span>"
    ]
  },
  {
    "objectID": "week01.html#lecture-1-motivation-and-philosophy-of-the-bayesian-approach",
    "href": "week01.html#lecture-1-motivation-and-philosophy-of-the-bayesian-approach",
    "title": "2  Week 1 — Introduction to Bayesian Thinking",
    "section": "",
    "text": "2.1.1 1.1 Probability as Belief\n\nIn the frequentist view, probability describes long-run frequencies of repeated events.\n\nIn the Bayesian view, probability represents degrees of belief about uncertain quantities.\nThis interpretation allows us to express uncertainty about parameters, models, and hypotheses.\n\n\n\n2.1.2 1.2 Why Bayesian?\n\nUnified logic of inference:\nAll uncertainty (parameters, predictions, models) is treated probabilistically.\n\nIncorporation of prior knowledge:\nPrior distributions let analysts integrate existing evidence or expert opinion.\n\nFlexibility:\nThe Bayesian framework handles hierarchical, missing-data, and complex models naturally.\n\nDecision-theoretic foundation:\nBayesian inference directly supports optimal decisions under uncertainty.\n\nComputational advances:\nMCMC and modern probabilistic programming (e.g., Stan, PyMC, JAGS) make Bayesian analysis practical.\n\n\n\n2.1.3 1.3 When to Use the Bayesian Approach\n\nSmall-sample or sparse data problems where prior knowledge helps stabilize inference.\n\nSituations with sequential data collection or adaptive designs.\n\nContexts demanding direct probability statements about parameters or hypotheses.\n\nDecision-making scenarios that require explicit uncertainty quantification.\n\n\n\n2.1.4 1.4 Illustrative Example\nSuppose a factory tests 10 light bulbs and finds 8 working.\n- A frequentist estimates the proportion as 0.8 with a confidence interval.\n- A Bayesian treats the true proportion $ $ as random and updates beliefs via\n$ p(y) p(y ), p() $.\nThe result: an explicit posterior distribution over $ $, not a single point estimate.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Week 1 — Introduction to Bayesian Thinking</span>"
    ]
  },
  {
    "objectID": "week01.html#lecture-2-bayes-theorem-and-the-building-blocks-of-inference",
    "href": "week01.html#lecture-2-bayes-theorem-and-the-building-blocks-of-inference",
    "title": "2  Week 1 — Introduction to Bayesian Thinking",
    "section": "2.2 Lecture 2: Bayes’ Theorem and the Building Blocks of Inference",
    "text": "2.2 Lecture 2: Bayes’ Theorem and the Building Blocks of Inference\n\n2.2.1 2.1 Bayes’ Theorem\nFor parameters \\(\\\\theta\\) and observed data \\(y\\):\n\\[\np(\\theta \\mid y) = \\frac{p(y \\mid \\theta)\\, p(\\theta)}{p(y)} =\n\\frac{p(y \\mid \\theta)\\, p(\\theta)}{\\int p(y \\mid \\theta)\\, p(\\theta)\\, d\\theta}.\n\\]\nWhere: - \\(p(\\theta)\\): Prior — expresses beliefs before seeing data.\n- \\(p(y \\mid \\theta)\\): Likelihood — the data-generating model.\n- \\(p(\\theta \\mid y)\\): Posterior — updated belief after seeing data.\n- \\(p(y)\\): Marginal likelihood / evidence — normalizing constant.\n\n\n2.2.2 2.2 The Three Key Components\n\n\n\n\n\n\n\n\nComponent\nDescription\nExample\n\n\n\n\nPrior\nEncodes information about $ $ before data\n$ (2,2) $ for coin bias\n\n\nLikelihood\nProbability model for data given $ $\n$ (n=10, ) $\n\n\nPosterior\nUpdated distribution combining both\n$ (2+y, 2+n-y) $\n\n\n\n\n\n2.2.3 2.3 Interpretation\n\nPosterior mean: expected value of $ $ after observing data.\n\nPosterior credible interval: range where $ $ lies with high probability (e.g., 95%).\n\nPosterior predictive distribution: used to predict future data.\n\n\n\n2.2.4 2.4 Key Insight\n\nThe likelihood updates the prior in light of data — the posterior is the result of this update.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Week 1 — Introduction to Bayesian Thinking</span>"
    ]
  },
  {
    "objectID": "week01.html#lecture-3-simple-analytical-examples-of-bayesian-updating",
    "href": "week01.html#lecture-3-simple-analytical-examples-of-bayesian-updating",
    "title": "2  Week 1 — Introduction to Bayesian Thinking",
    "section": "2.3 Lecture 3: Simple Analytical Examples of Bayesian Updating",
    "text": "2.3 Lecture 3: Simple Analytical Examples of Bayesian Updating\n\n2.3.1 3.1 Beta–Binomial Model (Coin-Flip Example)\nSetup:\nWe flip a coin $ n $ times and observe $ y $ heads.\nLet $ $ be the true probability of heads.\n\\[\ny \\mid \\theta \\sim \\text{Binomial}(n, \\theta), \\quad \\theta \\sim \\text{Beta}(\\alpha_0, \\beta_0).\n\\]\nPosterior: \\[\n\\theta \\mid y \\sim \\text{Beta}(\\alpha_0 + y, \\beta_0 + n - y).\n\\]\nPosterior mean: \\[\nE[\\theta \\mid y] = \\frac{\\alpha_0 + y}{\\alpha_0 + \\beta_0 + n}.\n\\]\nInterpretation:\n- The prior acts as pseudo-data: \\(\\alpha_0 - 1\\) prior successes and \\(\\beta_0 - 1\\) prior failures.\n- As $ n $ grows large, the data dominate the posterior.\nVisualization:\nPlot prior, likelihood, and posterior to show how the distribution tightens around the true value.\n\n\n\n2.3.2 3.2 Normal–Normal Model (Inference on a Mean)\nSetup:\nData $ y_1, , y_n $ are i.i.d. $ (, ^2) $, with known variance $ ^2 $.\nWe place a prior $ (_0, _0^2) $.\nPosterior: \\[\n\\mu \\mid y \\sim \\mathcal{N}(\\mu_1, \\tau_1^2),\n\\] where\n\\[\n\\tau_1^2 = \\left( \\frac{1}{\\tau_0^2} + \\frac{n}{\\sigma^2} \\right)^{-1}, \\quad\n\\mu_1 = \\tau_1^2 \\left( \\frac{\\mu_0}{\\tau_0^2} + \\frac{n \\bar{y}}{\\sigma^2} \\right).\n\\]\nInterpretation:\nThe posterior mean is a weighted average of the prior mean and sample mean: \\[\n\\mu_1 = w \\mu_0 + (1-w)\\bar{y}, \\quad w = \\frac{\\sigma^2}{\\sigma^2 + n\\tau_0^2}.\n\\]\nWhen $ _0^2 $ is large (weak prior), $ _1 {y} $.\nWhen data are scarce, the posterior leans more on the prior.\n\n\n\n2.3.3 3.3 Posterior Predictive Distribution\nFor a future observation $ \\(:\\)$ p( y) = p( ), p(y), d. \\[\nExample (Beta–Binomial):\n\\] p( = 1 y) = E[y] = . $$\nThis predictive probability reflects both uncertainty in $ $ and random variation in new data.\n\n\n\n2.3.4 3.4 Discussion and Concept Reinforcement\n\nPriors influence the posterior most when data are limited.\n\nWith sufficient data, Bayesian results converge to frequentist ones (Bernstein–von Mises theorem).\n\nCredible intervals directly express probability statements about parameters.\n\nModel assumptions (e.g., conjugacy, independence) simplify computation but can be relaxed using MCMC.\n\n\n\n\n2.3.5 3.5 Practical Example (R Demonstration)\n\n# Posterior update for a Binomial model\nalpha0 &lt;- 2; beta0 &lt;- 2  # prior\nn &lt;- 10; y &lt;- 7          # data\nalpha1 &lt;- alpha0 + y; beta1 &lt;- beta0 + n - y\n\ntheta &lt;- seq(0, 1, length.out = 500)\nplot(theta, dbeta(theta, alpha0, beta0), type=\"l\", lwd=2, col=\"blue\",\n     ylab=\"Density\", xlab=expression(theta),\n     main=\"Prior, Likelihood, and Posterior\")\nlines(theta, dbeta(theta, alpha1, beta1), col=\"red\", lwd=2)\nlegend(\"topright\",\n       legend=c(\"Prior Beta(2,2)\", \"Posterior Beta(9,5)\"),\n       col=c(\"blue\", \"red\"), lwd=2)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Week 1 — Introduction to Bayesian Thinking</span>"
    ]
  },
  {
    "objectID": "week02.html",
    "href": "week02.html",
    "title": "3  Week 2 — Conjugate Priors and Analytical Posteriors",
    "section": "",
    "text": "3.1 Overview\nThis week focuses on conjugate priors — special priors that yield posteriors in the same family of distributions as the prior.\nStudents will learn why conjugacy simplifies Bayesian inference, how to identify conjugate pairs for common likelihoods, and how to perform analytical posterior updates without simulation.\nWe will also introduce the concept of prior sensitivity analysis and noninformative (objective) priors.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Week 2 — Conjugate Priors and Analytical Posteriors</span>"
    ]
  },
  {
    "objectID": "week02.html#learning-goals",
    "href": "week02.html#learning-goals",
    "title": "3  Week 2 — Conjugate Priors and Analytical Posteriors",
    "section": "3.2 Learning Goals",
    "text": "3.2 Learning Goals\nBy the end of Week 2, you should be able to:\n\nDefine and identify conjugate priors for standard likelihood models.\n\nDerive analytical posteriors for Binomial, Poisson, and Normal models.\n\nCompute posterior summaries and predictive distributions.\n\nDiscuss the influence of priors on posterior inference.\n\nPerform prior sensitivity analysis in R.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Week 2 — Conjugate Priors and Analytical Posteriors</span>"
    ]
  },
  {
    "objectID": "week02.html#lecture-1-the-concept-of-conjugacy",
    "href": "week02.html#lecture-1-the-concept-of-conjugacy",
    "title": "3  Week 2 — Conjugate Priors and Analytical Posteriors",
    "section": "3.3 Lecture 1: The Concept of Conjugacy",
    "text": "3.3 Lecture 1: The Concept of Conjugacy\n\n3.3.1 1.1 Definition\nA conjugate prior for a likelihood \\(p(y \\mid \\theta)\\) is a prior distribution \\(p(\\theta)\\) such that the posterior \\(p(\\theta \\mid y)\\) belongs to the same family as the prior.\nFormally: \\[\np(\\theta \\mid y) \\propto p(y \\mid \\theta)\\, p(\\theta)\n\\] If \\(p(\\theta \\mid y)\\) has the same functional form as \\(p(\\theta)\\), then \\(p(\\theta)\\) is conjugate to the likelihood.\n\n\n3.3.2 1.2 Why Conjugacy Matters\n\nProvides closed-form expressions for posterior means, variances, and credible intervals.\n\nFacilitates sequential updating — easy to update priors as new data arrive.\n\nUseful for educational and analytic illustration before moving to MCMC methods.\n\n\n\n3.3.3 1.3 Examples of Conjugate Pairs\n\n\n\n\n\n\n\n\nLikelihood\nConjugate Prior\nPosterior Family\n\n\n\n\nBinomial\\((n,\\theta)\\)\nBeta\\((\\alpha,\\beta)\\)\nBeta\\((\\alpha+y, \\beta+n-y)\\)\n\n\nPoisson\\((\\lambda)\\)\nGamma\\((a,b)\\)\nGamma\\((a+\\sum y_i, b+n)\\)\n\n\nNormal\\((\\mu,\\sigma^2)\\) (known variance)\nNormal\\((\\mu_0,\\tau_0^2)\\)\nNormal\\((\\mu_1,\\tau_1^2)\\)\n\n\nExponential\\((\\lambda)\\)\nGamma\\((a,b)\\)\nGamma\\((a+n, b+\\sum y_i)\\)\n\n\nNormal mean/variance (unknown \\(\\sigma^2\\))\nNormal–Inverse-Gamma\nNormal–Inverse-Gamma",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Week 2 — Conjugate Priors and Analytical Posteriors</span>"
    ]
  },
  {
    "objectID": "week02.html#lecture-2-betabinomial-and-gammapoisson-models",
    "href": "week02.html#lecture-2-betabinomial-and-gammapoisson-models",
    "title": "3  Week 2 — Conjugate Priors and Analytical Posteriors",
    "section": "3.4 Lecture 2: Beta–Binomial and Gamma–Poisson Models",
    "text": "3.4 Lecture 2: Beta–Binomial and Gamma–Poisson Models\n\n3.4.1 2.1 Beta–Binomial Model (Review and Generalization)\nLet \\(y \\mid \\theta \\sim \\text{Binomial}(n,\\theta)\\) and \\(\\theta \\sim \\text{Beta}(\\alpha_0,\\beta_0)\\).\nThen the posterior is: \\[\n\\theta \\mid y \\sim \\text{Beta}(\\alpha_0 + y, \\beta_0 + n - y).\n\\]\nPosterior Mean: \\[\nE[\\theta \\mid y] = \\frac{\\alpha_0 + y}{\\alpha_0 + \\beta_0 + n}.\n\\]\nPredictive Probability for a Future Success: \\[\np(\\tilde{y}=1 \\mid y) = E[\\theta \\mid y].\n\\]\nInterpretation:\nEach observation updates the Beta prior by adding one success or failure to the corresponding shape parameter.\n\n\n\n3.4.2 2.2 Gamma–Poisson Model (Counts)\nSuppose we model count data as \\(y_i \\sim \\text{Poisson}(\\lambda)\\), with prior \\(\\lambda \\sim \\text{Gamma}(a_0, b_0)\\)\n(where the Gamma density is parameterized as \\(p(\\lambda) \\propto \\lambda^{a_0-1} e^{-b_0\\lambda}\\)).\nPosterior: \\[\n\\lambda \\mid y_1,\\ldots,y_n \\sim \\text{Gamma}\\left(a_0 + \\sum_{i=1}^n y_i,\\; b_0 + n\\right).\n\\]\nPosterior Mean and Variance: \\[\nE[\\lambda \\mid y] = \\frac{a_0 + \\sum y_i}{b_0 + n}, \\quad\n\\text{Var}[\\lambda \\mid y] = \\frac{a_0 + \\sum y_i}{(b_0 + n)^2}.\n\\]\nPosterior Predictive: \\[\np(\\tilde{y} \\mid y) = \\int \\text{Poisson}(\\tilde{y} \\mid \\lambda)\\, p(\\lambda \\mid y)\\, d\\lambda,\n\\] which follows a Negative Binomial distribution.\nInterpretation:\nThe Gamma prior acts as if we had observed \\(a_0-1\\) pseudo-events over \\(b_0\\) pseudo-trials.\n\n\n\n3.4.3 2.3 R Example: Gamma–Poisson Updating\n\n# Posterior update for Gamma-Poisson model\ny &lt;- c(3, 2, 4, 1, 0, 2, 3)\na0 &lt;- 2; b0 &lt;- 1   # prior Gamma(2,1)\nn &lt;- length(y)\n\na1 &lt;- a0 + sum(y)\nb1 &lt;- b0 + n\n\nlambda &lt;- seq(0, 10, length.out = 400)\nprior &lt;- dgamma(lambda, a0, b0)\nposterior &lt;- dgamma(lambda, a1, b1)\n\nplot(lambda, prior, type=\"l\", lwd=2, col=\"blue\", ylim=c(0, max(posterior)),\n     ylab=\"Density\", xlab=expression(lambda),\n     main=\"Gamma-Poisson Updating\")\nlines(lambda, posterior, col=\"red\", lwd=2)\nlegend(\"topright\",\n       legend=c(\"Prior Gamma(2,1)\", paste0(\"Posterior Gamma(\", a1, \",\", b1, \")\")),\n       col=c(\"blue\", \"red\"), lwd=2)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Week 2 — Conjugate Priors and Analytical Posteriors</span>"
    ]
  },
  {
    "objectID": "week03.html",
    "href": "week03.html",
    "title": "4  Week 3 — Monte Carlo Integration and Simulation-Based Bayesian Inference",
    "section": "",
    "text": "4.1 Overview\nThis week introduces Monte Carlo methods, which allow us to approximate Bayesian quantities when analytical solutions are unavailable.\nWe explore how random sampling can be used to estimate expectations, posterior summaries, and probabilities.\nBy the end of this week, students will understand how Monte Carlo simulation forms the foundation for modern Bayesian computation such as MCMC.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Week 3 — Monte Carlo Integration and Simulation-Based Bayesian Inference</span>"
    ]
  },
  {
    "objectID": "week03.html#learning-goals",
    "href": "week03.html#learning-goals",
    "title": "4  Week 3 — Monte Carlo Integration and Simulation-Based Bayesian Inference",
    "section": "4.2 Learning Goals",
    "text": "4.2 Learning Goals\nBy the end of Week 3, you should be able to:\n\nExplain the motivation for Monte Carlo methods in Bayesian inference.\n\nApproximate expectations, integrals, and posterior summaries using random sampling.\n\nImplement crude Monte Carlo and importance sampling in R.\n\nAssess the accuracy and variance of Monte Carlo estimators.\n\nInterpret Monte Carlo errors and convergence diagnostics.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Week 3 — Monte Carlo Integration and Simulation-Based Bayesian Inference</span>"
    ]
  },
  {
    "objectID": "week03.html#lecture-1-motivation-and-fundamentals-of-monte-carlo",
    "href": "week03.html#lecture-1-motivation-and-fundamentals-of-monte-carlo",
    "title": "4  Week 3 — Monte Carlo Integration and Simulation-Based Bayesian Inference",
    "section": "4.3 Lecture 1: Motivation and Fundamentals of Monte Carlo",
    "text": "4.3 Lecture 1: Motivation and Fundamentals of Monte Carlo\n\n4.3.1 1.1 The Problem\nBayesian inference often requires evaluating integrals such as: \\[\nE[h(\\theta) \\mid y] = \\int h(\\theta)\\, p(\\theta \\mid y)\\, d\\theta,\n\\] which are rarely available in closed form.\n\n\n4.3.2 1.2 Monte Carlo Idea\nIf we can sample \\(\\theta^{(1)}, \\ldots, \\theta^{(M)}\\) from the posterior \\(p(\\theta \\mid y)\\),\nthen we can approximate the expectation by: \\[\n\\hat{E}[h(\\theta)] = \\frac{1}{M} \\sum_{m=1}^M h(\\theta^{(m)}).\n\\] This is called the Monte Carlo estimator.\nBy the Law of Large Numbers, \\(\\hat{E}[h(\\theta)] \\to E[h(\\theta)]\\) as \\(M \\to \\infty\\).\nThe Central Limit Theorem gives: \\[\n\\sqrt{M}\\,(\\hat{E} - E[h(\\theta)]) \\approx N(0, \\text{Var}[h(\\theta)]).\n\\]\n\n\n4.3.3 1.3 Monte Carlo Error\nWe can estimate the simulation error by: \\[\n\\text{SE}(\\hat{E}) \\approx \\sqrt{\\frac{\\text{Var}(h(\\theta))}{M}}.\n\\] Larger \\(M\\) gives more accurate approximations but increases computation time.\n\n\n4.3.4 1.4 Simple Example\nCompute \\(E[\\theta]\\) for \\(\\theta \\sim \\text{Beta}(2,5)\\) using Monte Carlo.\n\nset.seed(1)\nM &lt;- 1e5\ntheta &lt;- rbeta(M, 2, 5)\nmean(theta)          # Monte Carlo estimate\n\n[1] 0.2861808\n\nvar(theta) / M       # Monte Carlo variance\n\n[1] 2.56548e-07",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Week 3 — Monte Carlo Integration and Simulation-Based Bayesian Inference</span>"
    ]
  },
  {
    "objectID": "week04.html",
    "href": "week04.html",
    "title": "5  Week 4 — Markov Chain Monte Carlo (MCMC) Methods",
    "section": "",
    "text": "5.1 Overview\nThis week introduces Markov Chain Monte Carlo (MCMC) — a powerful class of algorithms for simulating from complex posterior distributions that are difficult to sample from directly.\nYou will learn the logic of constructing Markov chains with a desired stationary distribution, how to implement the Metropolis–Hastings (MH) and Gibbs samplers, and how to assess convergence and mixing of MCMC chains.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Week 4 — Markov Chain Monte Carlo (MCMC) Methods</span>"
    ]
  },
  {
    "objectID": "week04.html#learning-goals",
    "href": "week04.html#learning-goals",
    "title": "5  Week 4 — Markov Chain Monte Carlo (MCMC) Methods",
    "section": "5.2 Learning Goals",
    "text": "5.2 Learning Goals\nBy the end of Week 4, you should be able to:\n\nExplain the intuition behind MCMC and why it works.\n\nImplement simple Metropolis–Hastings and Gibbs algorithms in R.\n\nDiagnose convergence using trace plots and summary statistics.\n\nCompute posterior means, variances, and credible intervals from MCMC samples.\n\nUnderstand practical issues such as burn-in, thinning, and autocorrelation.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Week 4 — Markov Chain Monte Carlo (MCMC) Methods</span>"
    ]
  },
  {
    "objectID": "week04.html#lecture-1-introduction-to-mcmc",
    "href": "week04.html#lecture-1-introduction-to-mcmc",
    "title": "5  Week 4 — Markov Chain Monte Carlo (MCMC) Methods",
    "section": "5.3 Lecture 1: Introduction to MCMC",
    "text": "5.3 Lecture 1: Introduction to MCMC\n\n5.3.1 1.1 Motivation\nFor many posteriors, sampling directly is infeasible.\nWe instead build a Markov chain whose stationary distribution is the target posterior \\(p(\\theta \\mid y)\\).\nAfter sufficient iterations, the draws from the chain behave like samples from the true posterior.\n\n\n5.3.2 1.2 Markov Chain Basics\nA Markov chain \\(\\{\\theta^{(t)}\\}\\) has the Markov property: \\[\np(\\theta^{(t)} \\mid \\theta^{(t-1)}, \\ldots, \\theta^{(1)}) = p(\\theta^{(t)} \\mid \\theta^{(t-1)}).\n\\] If the chain is ergodic, the distribution of \\(\\theta^{(t)}\\) converges to a stationary distribution \\(\\pi(\\theta)\\).\nMCMC constructs such chains so that \\(\\pi(\\theta) = p(\\theta \\mid y)\\).\n\n\n5.3.3 1.3 Core Idea\nRepeatedly propose a new value \\(\\theta^\\*\\) and decide whether to accept or reject it\nbased on how likely it is under the posterior.\nThis ensures that samples eventually represent the posterior distribution.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Week 4 — Markov Chain Monte Carlo (MCMC) Methods</span>"
    ]
  },
  {
    "objectID": "week04.html#lecture-2-the-metropolishastings-algorithm",
    "href": "week04.html#lecture-2-the-metropolishastings-algorithm",
    "title": "5  Week 4 — Markov Chain Monte Carlo (MCMC) Methods",
    "section": "5.4 Lecture 2: The Metropolis–Hastings Algorithm",
    "text": "5.4 Lecture 2: The Metropolis–Hastings Algorithm\n\n5.4.1 2.1 Algorithm Steps\n\nInitialize with \\(\\theta^{(0)}\\).\n\nFor each iteration \\(t=1,2,\\ldots,T\\):\n\nPropose \\(\\theta^\\* \\sim q(\\theta^\\* \\mid \\theta^{(t-1)})\\).\n\nCompute the acceptance probability: \\[\n\\alpha = \\min\\left(1,\\;\n\\frac{p(y \\mid \\theta^\\*)\\, p(\\theta^\\*)\\, q(\\theta^{(t-1)} \\mid \\theta^\\*)}\n     {p(y \\mid \\theta^{(t-1)})\\, p(\\theta^{(t-1)})\\, q(\\theta^\\* \\mid \\theta^{(t-1)})}\n\\right).\n\\]\nAccept \\(\\theta^\\*\\) with probability \\(\\alpha\\); otherwise, keep \\(\\theta^{(t)} = \\theta^{(t-1)}\\).\n\nAfter burn-in, the samples \\(\\{\\theta^{(t)}\\}\\) approximate draws from \\(p(\\theta \\mid y)\\).\n\n\n\n5.4.2 2.2 Special Case: Symmetric Proposal\nIf \\(q(\\theta^\\* \\mid \\theta^{(t-1)}) = q(\\theta^{(t-1)} \\mid \\theta^\\*)\\),\nthen \\[\n\\alpha = \\min\\left(1,\\; \\frac{p(y \\mid \\theta^\\*)\\, p(\\theta^\\*)}\n                         {p(y \\mid \\theta^{(t-1)})\\, p(\\theta^{(t-1)})}\\right).\n\\] This is the Metropolis algorithm.\n\n\n5.4.3 2.3 Example: Posterior for a Normal Mean (Unknown Mean, Known Variance)\nLet \\(y_i \\sim N(\\mu, 1)\\) for \\(i=1,\\ldots,n\\) and prior \\(\\mu \\sim N(0,10^2)\\).\n\nset.seed(123)\n# Data\ny &lt;- rnorm(50, mean = 3, sd = 1)\nn &lt;- length(y)\npost_log &lt;- function(mu) {\n  sum(dnorm(y, mu, 1, log=TRUE)) + dnorm(mu, 0, 10, log=TRUE)\n}\n\n# Metropolis sampler\nT &lt;- 10000\nmu &lt;- numeric(T)\nmu[1] &lt;- 0\nproposal_sd &lt;- 0.5\n\nfor(t in 2:T) {\n  mu_star &lt;- rnorm(1, mu[t-1], proposal_sd)\n  log_alpha &lt;- post_log(mu_star) - post_log(mu[t-1])\n  if(log(runif(1)) &lt; log_alpha) mu[t] &lt;- mu_star else mu[t] &lt;- mu[t-1]\n}\n\nburnin &lt;- 1000\npost_samples &lt;- mu[(burnin+1):T]\n\nhist(post_samples, prob=TRUE, col=\"skyblue\", main=\"Posterior Samples for μ\")\nabline(v = mean(post_samples), col=\"red\", lwd=2)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Week 4 — Markov Chain Monte Carlo (MCMC) Methods</span>"
    ]
  },
  {
    "objectID": "week05.html",
    "href": "week05.html",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "",
    "text": "6.1 Learning Goals\nThis week introduces methods for evaluating Bayesian model adequacy and comparing models.\nWe focus on Posterior Predictive Checking (PPC) and Bayesian Model Comparison via Bayes factors, WAIC, and LOO.\nStudents will diagnose model fit using replicated data and compare predictive accuracy among competing models.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week05.html#learning-goals",
    "href": "week05.html#learning-goals",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "",
    "text": "Generate and interpret posterior predictive distributions.\n\nUse posterior predictive checks to detect model misspecification.\n\nCompute and interpret WAIC, LOO, and Bayes factors.\n\nEvaluate model adequacy visually and numerically in R.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week05.html#lecture-1-posterior-predictive-checking",
    "href": "week05.html#lecture-1-posterior-predictive-checking",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "6.2 Lecture 1 — Posterior Predictive Checking",
    "text": "6.2 Lecture 1 — Posterior Predictive Checking\n\n6.2.1 Posterior Predictive Distribution\nFor data \\(y\\) and parameters \\(\\theta\\), \\[\np(\\tilde{y}\\mid y) = \\int p(\\tilde{y}\\mid\\theta)\\,p(\\theta\\mid y)\\,d\\theta.\n\\] If a model is adequate, the observed data \\(y\\) should look typical among replicated datasets \\(\\tilde{y}\\) simulated from this distribution.\n\n\n6.2.2 Implementation Steps\n\nChoose a discrepancy statistic \\(T(y,\\theta)\\) capturing an aspect of fit.\n\nFor each posterior draw \\(\\theta^{(m)}\\):\n\nSimulate \\(\\tilde{y}^{(m)}\\!\\sim\\!p(\\tilde{y}\\mid\\theta^{(m)})\\).\n\nCompute \\(T(y,\\theta^{(m)})\\) and \\(T(\\tilde{y}^{(m)},\\theta^{(m)})\\).\n\n\nCompute posterior predictive \\(p\\)-value:\n\\[\np_{\\text{ppc}}=P\\!\\left(T(\\tilde{y},\\theta)\\!&gt;\\!T(y,\\theta)\\mid y\\right).\n\\]\n\nValues near 0 or 1 suggest lack of fit.\n\n\n6.2.3 Example A — Binomial Model\n\nset.seed(5)\nM &lt;- 5000\ny_obs &lt;- 7; n &lt;- 10\n\ntheta &lt;- rbeta(M, 2 + y_obs, 2 + n - y_obs)   # posterior draws\ny_rep &lt;- rbinom(M, n, theta)\n\nppc_p &lt;- mean(y_rep &gt;= y_obs)\nppc_p\n\n[1] 0.509\n\n\n\nhist(y_rep, breaks=seq(-0.5, n+0.5, by=1),\n     col=\"skyblue\", main=\"Posterior Predictive Distribution\", xlab=\"Replicated ỹ\")\nabline(v=y_obs, col=\"red\", lwd=2)\nlegend(\"topright\", legend=c(\"Observed y\"), col=\"red\", lwd=2, bty=\"n\")\n\n\n\n\nPosterior predictive distribution of ỹ\n\n\n\n\n\n\n6.2.4 Example B — Normal Model (Standard Deviation Check)\n\nset.seed(6)\ny &lt;- rnorm(30, mean=0, sd=1)\nmu_draw &lt;- rnorm(1000, 0, 1)\ny_rep_mat &lt;- replicate(200, rnorm(length(y), sample(mu_draw,1), 1))\n\nT_obs &lt;- sd(y)\nT_rep &lt;- apply(y_rep_mat, 2, sd)\n\nmean(T_rep &gt;= T_obs)\n\n[1] 0.145\n\n\n\nhist(T_rep, col=\"lightgray\", main=\"Posterior Predictive Check: SD\",\n     xlab=\"Replicated sd(ỹ)\")\nabline(v=T_obs, col=\"red\", lwd=2)\nlegend(\"topright\", legend=c(\"Observed sd(y)\"), col=\"red\", lwd=2, bty=\"n\")\n\n\n\n\nPPC for sample standard deviation\n\n\n\n\n\n\n6.2.5 Practical Tips\n\nUse multiple statistics (\\(T_1, T_2,\\dots\\)).\n\nVisual checks often outperform a single numeric \\(p_{\\text{ppc}}\\).\n\nIntegrate PPC with subject-matter knowledge and residual plots.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week05.html#lecture-2-bayesian-model-comparison",
    "href": "week05.html#lecture-2-bayesian-model-comparison",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "6.3 Lecture 2 — Bayesian Model Comparison",
    "text": "6.3 Lecture 2 — Bayesian Model Comparison\n\n6.3.1 Motivation\nCompeting Bayesian models are compared by their fit and complexity.\nCommon approaches include Bayes factors, WAIC, and LOO.\n\n\n\n6.3.2 Bayes Factors\nGiven two models \\(M_1\\) and \\(M_2\\), \\[\n\\text{BF}_{12} = \\frac{p(y\\mid M_1)}{p(y\\mid M_2)} ,\\qquad\np(y\\mid M)=\\int p(y\\mid\\theta_M,M)\\,p(\\theta_M\\mid M)\\,d\\theta_M.\n\\] - \\(\\text{BF}_{12}&gt;1\\) favors \\(M_1\\).\n- Express in \\(\\log_{10}\\) scale for interpretation.\n\n\n\n\\(\\log_{10}\\text{BF}_{12}\\)\nEvidence for \\(M_1\\)\n\n\n\n\n0–0.5\nBarely worth mentioning\n\n\n0.5–1\nSubstantial\n\n\n1–2\nStrong\n\n\n&gt;2\nDecisive\n\n\n\n\n\n\n6.3.3 WAIC and LOO (Predictive Criteria)\nWhen computing marginal likelihoods is infeasible, we use predictive criteria:\n\nWAIC (Watanabe–Akaike Information Criterion)\n\\[\n\\text{WAIC} = -2(\\text{lppd} - p_{\\text{WAIC}}),\n\\] where \\(\\text{lppd}=\\sum_i \\log\\!\\left(\\frac{1}{S}\\sum_{s=1}^S p(y_i\\mid\\theta^{(s)})\\right)\\).\nLOO (Leave-One-Out Cross-Validation)\nApproximates the out-of-sample predictive performance: \\[\n\\text{LOO} = \\sum_i \\log p(y_i \\mid y_{-i}),\n\\] usually estimated via Pareto-smoothed importance sampling (PSIS-LOO).\n\nLower WAIC (or higher elpd_loo) indicates better predictive performance.\n\n\n\n6.3.4 Example A — Comparing Two Regression Models with brms (optional heavy computation)\n\n# Uncomment and install if needed\n# install.packages(c(\"brms\", \"loo\"))\n\nlibrary(brms)\nlibrary(loo)\n\nset.seed(7)\ndat &lt;- data.frame(x = rnorm(200))\ndat$y &lt;- 2 + 3*dat$x + 1.5*dat$x^2 + rnorm(200, sd = 1)  # true quadratic\n\n# Fit linear vs quadratic models\nm1 &lt;- brm(y ~ x, data = dat, family = gaussian(), refresh = 0)\nm2 &lt;- brm(y ~ x + I(x^2), data = dat, family = gaussian(), refresh = 0)\n\nloo1 &lt;- loo(m1)\nloo2 &lt;- loo(m2)\nloo_compare(loo1, loo2)\n\npp_check(m1)\npp_check(m2)\n\n\n\n\n6.3.5 Example B — Quick WAIC Comparison via Frequentist Approximation\n\nset.seed(42)\nN &lt;- 150\nx &lt;- rnorm(N)\ny &lt;- 1.5 + 2.2*x + rnorm(N, sd=1.2)\n\nm1 &lt;- lm(y ~ x)\nm2 &lt;- lm(y ~ poly(x, 2, raw = TRUE))\n\nsigma1 &lt;- summary(m1)$sigma\nsigma2 &lt;- summary(m2)$sigma\n\n# Pseudo-WAIC: approximate lppd - 2p using residual sum of squares\nRSS1 &lt;- sum(resid(m1)^2)\nRSS2 &lt;- sum(resid(m2)^2)\nnpar1 &lt;- length(coef(m1))\nnpar2 &lt;- length(coef(m2))\n\nWAIC1 &lt;- -2 * (sum(dnorm(y, predict(m1), sigma1, log=TRUE)) - npar1)\nWAIC2 &lt;- -2 * (sum(dnorm(y, predict(m2), sigma2, log=TRUE)) - npar2)\n\ndata.frame(Model=c(\"Linear\",\"Quadratic\"), WAIC=c(WAIC1,WAIC2))\n\n      Model     WAIC\n1    Linear 473.9530\n2 Quadratic 475.7823\n\n\n\n\n\n6.3.6 Visual Predictive Comparison\n\nplot(x, y, pch=19, col=\"#00000055\", main=\"Observed Data with Fitted Models\")\nxs &lt;- seq(min(x), max(x), length.out=200)\nlines(xs, predict(m1, newdata=data.frame(x=xs)), col=\"steelblue\", lwd=2)\nlines(xs, predict(m2, newdata=data.frame(x=xs)), col=\"firebrick\", lwd=2)\nlegend(\"topleft\", lwd=2, col=c(\"steelblue\",\"firebrick\"),\n       legend=c(\"Linear\",\"Quadratic\"), bty=\"n\")\n\n\n\n\nOverlay of linear and quadratic model fits\n\n\n\n\n\n\n\n6.3.7 Practical Summary\n\n\n\n\n\n\n\n\nMethod\nStrength\nLimitation\n\n\n\n\nPosterior Predictive Check\nDiagnoses lack of fit to observed data\nNot inherently comparative\n\n\nBayes Factor\nTheoretically coherent model evidence\nSensitive to priors; hard integration\n\n\nWAIC / LOO\nOut-of-sample predictive performance\nApproximate; needs posterior draws",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week05.html#lab-5-model-checking-and-comparison",
    "href": "week05.html#lab-5-model-checking-and-comparison",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "6.4 Lab 5 — Model Checking and Comparison",
    "text": "6.4 Lab 5 — Model Checking and Comparison\nObjectives\n\nPerform PPC using both numerical and visual methods.\n\nCompute and interpret WAIC and LOO for model selection.\n\nVisualize predictive differences among models.\n\nPackages\nbrms, loo, bayesplot, ggplot2\nTasks\n\nFit two Bayesian regression models on the same dataset.\n\nConduct posterior predictive checks and compare simulated vs. observed data.\n\nCompute WAIC and LOO; summarize which model performs better.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week05.html#homework-5",
    "href": "week05.html#homework-5",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "6.5 Homework 5",
    "text": "6.5 Homework 5\n\nConceptual\n\nExplain the purpose of posterior predictive checks.\n\nCompare WAIC and LOO conceptually.\n\nComputational\n\nSimulate data from a known model. Fit two Bayesian models in R.\n\nUse PPC, WAIC, and LOO to assess fit.\n\nDiscuss how model choice depends on criterion used.\n\nReflection\n\nWhy might visual checks and numerical metrics disagree?\n\nWhich model would you report and why?",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week05.html#key-takeaways",
    "href": "week05.html#key-takeaways",
    "title": "6  Week 5 — Model Checking and Comparison",
    "section": "6.6 Key Takeaways",
    "text": "6.6 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nPosterior Predictive Check\nCompares observed data to replicated draws under the posterior.\n\n\nPosterior Predictive p-Value\nQuantifies fit; extremes suggest model misfit.\n\n\nWAIC / LOO\nPredictive performance measures for Bayesian models.\n\n\nBayes Factor\nRatio of marginal likelihoods for model comparison.\n\n\nCombined Evaluation\nUse graphical and numerical criteria together.\n\n\n\n\nNext Week: Hierarchical Bayesian Models — introducing partial pooling and shrinkage.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Week 5 — Model Checking and Comparison</span>"
    ]
  },
  {
    "objectID": "week06.html",
    "href": "week06.html",
    "title": "7  Week 6 — Hierarchical Bayesian Models",
    "section": "",
    "text": "7.1 Learning Goals\nThis week introduces hierarchical (multilevel) Bayesian models, which allow parameters to vary across groups while sharing information through higher-level priors.\nWe study partial pooling, shrinkage, and their implementation for normal and regression models.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Week 6 — Hierarchical Bayesian Models</span>"
    ]
  },
  {
    "objectID": "week06.html#learning-goals",
    "href": "week06.html#learning-goals",
    "title": "7  Week 6 — Hierarchical Bayesian Models",
    "section": "",
    "text": "Explain the motivation for hierarchical modeling.\n\nFormulate hierarchical models with group-level parameters.\n\nInterpret partial pooling and shrinkage.\n\nImplement a two-level Bayesian model in R using simulation or brms.\n\nCompare complete, no-pooling, and partial-pooling approaches.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Week 6 — Hierarchical Bayesian Models</span>"
    ]
  },
  {
    "objectID": "week06.html#lecture-1-motivation-and-structure-of-hierarchical-models",
    "href": "week06.html#lecture-1-motivation-and-structure-of-hierarchical-models",
    "title": "7  Week 6 — Hierarchical Bayesian Models",
    "section": "7.2 Lecture 1 — Motivation and Structure of Hierarchical Models",
    "text": "7.2 Lecture 1 — Motivation and Structure of Hierarchical Models\n\n7.2.1 1.1 Why Hierarchical Models?\nHierarchical models capture structured variability among related groups or units: - Repeated measures within individuals\n- Students within classrooms\n- Machines within factories\nThey balance within-group and between-group information by introducing group-specific parameters drawn from a common population distribution.\n\n\n\n7.2.2 1.2 Model Structure\nFor group \\(begin:math:text\\) j = 1,\\ldots,J \\(end:math:text\\) and observations \\(begin:math:text\\) i = 1,\\ldots,n_j \\(end:math:text\\):\n\\[\ny_{ij} \\mid \\theta_j, \\sigma^2 \\sim \\mathcal{N}(\\theta_j, \\sigma^2), \\qquad\n\\theta_j \\mid \\mu, \\tau^2 \\sim \\mathcal{N}(\\mu, \\tau^2).\n\\]\nTop-level priors: \\[\n\\mu \\sim \\mathcal{N}(0,10^2), \\quad \\tau \\sim \\text{Half-Cauchy}(0,5).\n\\]\n\n\\(begin:math:text\\) \\mu \\(end:math:text\\): overall population mean\n\n\\(begin:math:text\\) \\tau \\(end:math:text\\): between-group standard deviation (pooling strength)\n\n\\(begin:math:text\\) \\sigma \\(end:math:text\\): within-group standard deviation\n\n\n\n\n7.2.3 1.3 Three Extremes of Pooling\n\n\n\n\n\n\n\n\nModel Type\nDescription\nBehavior\n\n\n\n\nNo pooling\nEstimate each \\(begin:math:text\\) \\theta_j \\(end:math:text\\) separately\nIgnores commonality across groups\n\n\nComplete pooling\nForce all groups to share one parameter\nIgnores group differences\n\n\nPartial pooling\nCombine information via hierarchical prior\nBalances both; default Bayesian choice\n\n\n\n\n\n\n7.2.4 1.4 Shrinkage Intuition\nPosterior for each group mean \\(begin:math:text\\) \\theta_j \\(end:math:text\\) shrinks toward the global mean \\(begin:math:text\\) \\mu \\(end:math:text\\):\n\\[\nE[\\theta_j \\mid y] = w_j \\bar{y}_j + (1-w_j)\\mu,\n\\] where\n\\[\nw_j = \\frac{n_j/\\sigma^2}{n_j/\\sigma^2 + 1/\\tau^2}.\n\\]\n\nLarge \\(begin:math:text\\) n_j \\(end:math:text\\) (lots of data): \\(begin:math:text\\) w_j \\to 1 \\(end:math:text\\) → less shrinkage.\n\nSmall \\(begin:math:text\\) n_j \\(end:math:text\\): \\(begin:math:text\\) w_j \\to 0 \\(end:math:text\\) → stronger shrinkage toward \\(begin:math:text\\) \\mu \\(end:math:text\\).\n\n\n\n\n7.2.5 1.5 Example — Simulated Group Means\n\nset.seed(6)\nJ &lt;- 8; n_j &lt;- rep(10, J)\nmu_true &lt;- 5; tau_true &lt;- 2; sigma_true &lt;- 1\n\ntheta_true &lt;- rnorm(J, mu_true, tau_true)\ny &lt;- sapply(theta_true, function(tj) rnorm(10, tj, sigma_true))\nybar &lt;- colMeans(y)\n\n# No pooling (group means)\nno_pool &lt;- ybar\n\n# Complete pooling (global mean)\ncomplete_pool &lt;- mean(y)\n\n# Partial pooling: simple empirical Bayes shrinkage\ntau_hat &lt;- sd(ybar)\nsigma_hat &lt;- sd(as.vector(y))\nw &lt;- (n_j/sigma_hat^2) / (n_j/sigma_hat^2 + 1/tau_hat^2)\npartial_pool &lt;- w*ybar + (1-w)*complete_pool\n\ndata.frame(Group=1:J,\n           ybar=round(ybar,2),\n           NoPool=round(no_pool,2),\n           Partial=round(partial_pool,2))\n\n  Group ybar NoPool Partial\n1     1 5.53   5.53    5.53\n2     2 4.06   4.06    4.21\n3     3 6.90   6.90    6.76\n4     4 8.19   8.19    7.91\n5     5 4.86   4.86    4.93\n6     6 5.42   5.42    5.43\n7     7 2.20   2.20    2.55\n8     8 6.99   6.99    6.84\n\n\nObserve how partial-pool estimates move small-sample groups toward the global mean.\n\n\n\n7.2.6 1.6 Advantages of Hierarchical Models\n\nBorrow strength across groups.\n\nNaturally incorporate uncertainty at multiple levels.\n\nHandle unbalanced data and missingness elegantly.\n\nAllow group-level predictors and complex dependence structures.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Week 6 — Hierarchical Bayesian Models</span>"
    ]
  },
  {
    "objectID": "week06.html#lecture-2-hierarchical-regression-and-implementation",
    "href": "week06.html#lecture-2-hierarchical-regression-and-implementation",
    "title": "7  Week 6 — Hierarchical Bayesian Models",
    "section": "7.3 Lecture 2 — Hierarchical Regression and Implementation",
    "text": "7.3 Lecture 2 — Hierarchical Regression and Implementation\n\n7.3.1 2.1 Hierarchical Linear Regression\nGeneral form: \\[\ny_{ij} = \\alpha_j + \\beta_j x_{ij} + \\varepsilon_{ij}, \\quad \\varepsilon_{ij} \\sim \\mathcal{N}(0,\\sigma^2),\n\\] \\[\n\\alpha_j \\sim \\mathcal{N}(\\mu_\\alpha, \\tau_\\alpha^2), \\quad\n\\beta_j \\sim \\mathcal{N}(\\mu_\\beta, \\tau_\\beta^2).\n\\]\nThis allows both intercepts and slopes to vary by group.\n\n\n\n7.3.2 2.2 Example — Hierarchical Regression with brms\n\nlibrary(brms)\nset.seed(7)\n\nJ &lt;- 10\nn_j &lt;- 20\ngroup &lt;- rep(1:J, each=n_j)\nx &lt;- rnorm(J*n_j, 0, 1)\n\nalpha_true &lt;- rnorm(J, 2, 1)\nbeta_true  &lt;- rnorm(J, 3, 0.5)\nsigma_true &lt;- 0.8\n\ny &lt;- alpha_true[group] + beta_true[group]*x + rnorm(J*n_j, 0, sigma_true)\ndat &lt;- data.frame(y, x, group=factor(group))\n\n# Hierarchical model (random intercept and slope)\nm_hier &lt;- brm(y ~ 1 + x + (1 + x | group),\n              data=dat, family=gaussian(),\n              chains=2, iter=2000, refresh=0)\n\nsummary(m_hier)\nplot(m_hier)\n\nThe (1 + x | group) formula defines a varying intercept and slope for each group.\n\n\n\n7.3.3 2.3 Interpretation\nPosterior summaries provide: - Group-level means \\(begin:math:text\\) \\alpha_j, \\beta_j \\(end:math:text\\).\n- Population-level means \\(begin:math:text\\) \\mu_\\alpha, \\mu_\\beta \\(end:math:text\\).\n- Variability estimates \\(begin:math:text\\) \\tau_\\alpha, \\tau_\\beta \\(end:math:text\\) showing degree of pooling.\nVisualize partial pooling by comparing group-specific fits to the global regression line.\n\npp_check(m_hier)\nplot(conditional_effects(m_hier), points=TRUE)\n\n\n\n\n7.3.4 2.4 Practical Considerations\n\nChoose weakly informative hyperpriors for scale parameters (e.g., Half-Cauchy or Exponential).\n\nInspect group-level posterior intervals to assess pooling.\n\nCenter predictors for numerical stability.\n\nUse hierarchical models as the default when groups share a common process.\n\n\n\n\n7.3.5 2.5 Summary of Hierarchical Modeling Benefits\n\n\n\n\n\n\n\nFeature\nDescription\n\n\n\n\nPartial pooling\nShares strength across groups while retaining group differences.\n\n\nShrinkage\nStabilizes small-sample estimates toward population mean.\n\n\nInterpretability\nCaptures multi-level variation naturally.\n\n\nPredictive accuracy\nUsually superior to separate or fully pooled models.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Week 6 — Hierarchical Bayesian Models</span>"
    ]
  },
  {
    "objectID": "week06.html#homework-6",
    "href": "week06.html#homework-6",
    "title": "7  Week 6 — Hierarchical Bayesian Models",
    "section": "7.4 Homework 6",
    "text": "7.4 Homework 6\n\nConceptual\n\nExplain why hierarchical modeling is often superior to analyzing groups separately.\n\nDistinguish between complete pooling, no pooling, and partial pooling.\n\nComputational\n\nSimulate a small dataset with several groups and fit:\n\nSeparate regressions (no pooling).\n\nA single pooled regression.\n\nA hierarchical model (partial pooling).\n\n\nCompare estimates for each group and interpret shrinkage behavior.\n\nReflection\n\nIn what situations would you not use a hierarchical model?\n\nHow does the hierarchical prior act as a regularizer?",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Week 6 — Hierarchical Bayesian Models</span>"
    ]
  },
  {
    "objectID": "week06.html#key-takeaways",
    "href": "week06.html#key-takeaways",
    "title": "7  Week 6 — Hierarchical Bayesian Models",
    "section": "7.5 Key Takeaways",
    "text": "7.5 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nHierarchical Model\nCombines group-level and population-level inference.\n\n\nPartial Pooling\nBalances within- and between-group information.\n\n\nShrinkage\nMoves noisy group estimates toward a global mean.\n\n\nHierarchical Regression\nExtends pooling to both intercepts and slopes.\n\n\nPractical Insight\nDefault choice when analyzing grouped or multilevel data.\n\n\n\n\nNext Week: Bayesian Decision Theory — introducing utilities, losses, and optimal decision rules under uncertainty.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Week 6 — Hierarchical Bayesian Models</span>"
    ]
  },
  {
    "objectID": "week07.html",
    "href": "week07.html",
    "title": "8  Week 7 — Bayesian Decision Theory",
    "section": "",
    "text": "8.1 Learning Goals\nThis week introduces the decision-theoretic foundation of Bayesian inference.\nWe study how posterior distributions lead naturally to optimal decisions when losses or utilities are specified, and apply the theory to point estimation and hypothesis testing.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Week 7 — Bayesian Decision Theory</span>"
    ]
  },
  {
    "objectID": "week07.html#learning-goals",
    "href": "week07.html#learning-goals",
    "title": "8  Week 7 — Bayesian Decision Theory",
    "section": "",
    "text": "Describe the Bayesian decision-theoretic framework.\n\nDefine loss functions and posterior expected loss.\n\nDerive Bayes rules for common loss functions.\n\nApply Bayesian decision principles to estimation and classification.\n\nDistinguish between point estimation, interval estimation, and decision-making contexts.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Week 7 — Bayesian Decision Theory</span>"
    ]
  },
  {
    "objectID": "week07.html#lecture-1-principles-of-bayesian-decision-theory",
    "href": "week07.html#lecture-1-principles-of-bayesian-decision-theory",
    "title": "8  Week 7 — Bayesian Decision Theory",
    "section": "8.2 Lecture 1 — Principles of Bayesian Decision Theory",
    "text": "8.2 Lecture 1 — Principles of Bayesian Decision Theory\n\n8.2.1 1.1 Motivation\nStatistical inference often involves making decisions under uncertainty:\nselect an action \\(begin:math:text\\) a \\(end:math:text\\) based on observed data \\(begin:math:text\\) y \\(end:math:text\\).\nEach action has a loss (or utility) depending on the true parameter value \\(begin:math:text\\) \\theta \\(end:math:text\\).\n\n\n8.2.2 1.2 The Decision-Theoretic Setup\n\nParameter: \\(begin:math:text\\) \\theta \\in \\Theta \\(end:math:text\\)\n\nData: \\(begin:math:text\\) y \\(end:math:text\\)\n\nAction space: \\(begin:math:text\\) \\mathcal{A} \\(end:math:text\\)\n\nLoss function: \\(begin:math:text\\) L(a,\\theta) \\(end:math:text\\)\n\nAfter observing \\(begin:math:text\\) y \\(end:math:text\\), the Bayesian chooses an action \\(begin:math:text\\) a(y) \\(end:math:text\\) minimizing posterior expected loss: \\[\n\\rho(a\\mid y) = E[L(a,\\theta)\\mid y] = \\int L(a,\\theta)\\,p(\\theta\\mid y)\\,d\\theta.\n\\]\nBayes rule:\n\\[\na^*(y) = \\arg\\min_a \\rho(a\\mid y).\n\\]\n\n\n\n8.2.3 1.3 Common Loss Functions and Bayes Rules\n\n\n\n\n\n\n\n\nLoss Function\nForm\nBayes Action\n\n\n\n\nSquared Error\n\\(begin:math:text\\) L(a,\\theta)=(a-\\theta)^2 \\(end:math:text\\)\nPosterior mean \\(begin:math:text\\) E[\\theta\\mid y] \\(end:math:text\\)\n\n\nAbsolute Error\n\\(begin:math:text\\) L(a,\\theta)=\na-\\theta\n\n\n0–1 Loss\n\\(begin:math:text\\) L(a,\\theta)=\\mathbb{1}\\{a\\neq\\theta\\} \\(end:math:text\\)\nPosterior mode (MAP)\n\n\n\nThese connect the posterior mean, median, and mode to optimal decisions under different losses.\n\n\n\n8.2.4 1.4 Example — Estimation under Quadratic Loss\nSuppose \\(begin:math:text\\) y\\mid\\theta\\sim N(\\theta,1) \\(end:math:text\\) with prior \\(begin:math:text\\) \\theta\\sim N(0,1) \\(end:math:text\\).\nPosterior: \\(begin:math:text\\) \\theta\\mid y \\sim N\\!\\left(\\frac{y}{2}, \\frac{1}{2}\\right) \\(end:math:text\\).\nBayes estimator under squared loss: \\[\na^*(y)=E[\\theta\\mid y]=\\frac{y}{2}.\n\\]\n\nset.seed(7)\ny &lt;- seq(-4, 4, length=100)\nbayes_est &lt;- y/2\nplot(y, bayes_est, type=\"l\", lwd=2, col=\"steelblue\",\n     main=\"Bayes Estimator under Squared Loss\", xlab=\"y\", ylab=\"a*(y)\")\nabline(a=0, b=1, col=\"red\", lty=2)\nlegend(\"topleft\", legend=c(\"Bayes estimator\",\"MLE (a=y)\"),\n       col=c(\"steelblue\",\"red\"), lwd=2, lty=c(1,2), bty=\"n\")\n\n\n\n\n\n\n\n\nInterpretation: The Bayes rule shrinks the estimate toward zero (the prior mean), especially for small |y|.\n\n\n\n8.2.5 1.5 Decision Rules and Risk\nThe Bayes risk is the expected loss averaged over data and parameters: \\[\nr(a) = E[L(a(Y),\\Theta)] = \\int\\!\\!\\int L(a(y),\\theta)\\,p(y,\\theta)\\,dy\\,d\\theta.\n\\]\nA decision rule minimizing Bayes risk across all priors is admissible (cannot be uniformly improved).\n\n\n\n8.2.6 1.6 Example — Hypothesis Testing with 0–1 Loss\nWe test \\(begin:math:text\\) H_0:\\theta\\le0 \\(end:math:text\\) vs \\(begin:math:text\\) H_1:\\theta&gt;0 \\(end:math:text\\).\nLoss: \\(begin:math:display\\) L(a,\\theta)= \\begin{cases} 0 & \\text{if correct},\\\\ 1 & \\text{if wrong}. \\end{cases} \\(end:math:display\\)\nPosterior decision rule: \\[\n\\text{Accept } H_1 \\text{ if } P(\\theta&gt;0\\mid y) &gt; 0.5.\n\\]\n\nset.seed(8)\ntheta_draws &lt;- rnorm(5000, mean=1, sd=1)\nmean(theta_draws &gt; 0)   # posterior probability of H1\n\n[1] 0.8406",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Week 7 — Bayesian Decision Theory</span>"
    ]
  },
  {
    "objectID": "week07.html#lecture-2-applications-and-extensions",
    "href": "week07.html#lecture-2-applications-and-extensions",
    "title": "8  Week 7 — Bayesian Decision Theory",
    "section": "8.3 Lecture 2 — Applications and Extensions",
    "text": "8.3 Lecture 2 — Applications and Extensions\n\n8.3.1 2.1 Bayesian Credible Intervals as Decision Regions\nFor a given loss that penalizes excluding the true parameter,\na credible interval minimizing posterior expected loss corresponds to the shortest interval containing a fixed posterior probability (e.g. 95%).\n\ntheta_post &lt;- rnorm(5000, mean=2, sd=1)\nquantile(theta_post, c(0.025, 0.975))\n\n        2.5%        97.5% \n-0.004383415  4.024907476 \n\n\n\n\n\n8.3.2 2.2 Decision Theory for Classification\nFor a two-class problem with class probabilities \\(begin:math:text\\) p_1 = P(Y=1\\mid x) \\(end:math:text\\) and \\(begin:math:text\\) p_0 = 1-p_1 \\(end:math:text\\):\nMinimize expected loss \\(begin:math:text\\) L(a,y) \\(end:math:text\\) using a loss matrix.\n\n\n\nTrue Class\nPredict 0\nPredict 1\n\n\n\n\n0\n0\n\\(begin:math:text\\)c_{10}\\(end:math:text\\)\n\n\n1\n\\(begin:math:text\\)c_{01}\\(end:math:text\\)\n0\n\n\n\nBayes rule: choose class 1 if \\[\n\\frac{p_1}{p_0} &gt; \\frac{c_{10}}{c_{01}}.\n\\]\nThe usual 0–1 loss corresponds to \\(begin:math:text\\) c_{10}=c_{01}=1 \\(end:math:text\\), threshold = 0.5.\n\np1 &lt;- seq(0,1,length=200)\nthreshold &lt;- 0.5\nplot(p1, ifelse(p1&gt;threshold,1,0), type=\"s\", col=\"steelblue\", lwd=2,\n     main=\"Bayesian Decision Boundary (Two-Class)\", xlab=\"P(Y=1|x)\", ylab=\"Decision: 1=Class1\")\nabline(v=threshold, col=\"red\", lty=2)\nlegend(\"topleft\", legend=c(\"Decision Rule\",\"Threshold 0.5\"),\n       col=c(\"steelblue\",\"red\"), lwd=2, lty=c(1,2), bty=\"n\")\n\n\n\n\n\n\n\n\n\n\n\n8.3.3 2.3 Loss vs Utility\nUtility \\(begin:math:text\\) U(a,\\theta) \\(end:math:text\\) is simply the negative of loss.\nMaximizing expected utility is equivalent to minimizing expected loss: \\[\na^*(y) = \\arg\\max_a E[U(a,\\theta)\\mid y].\n\\] This framing is often used in economics and decision analysis.\n\n\n\n8.3.4 2.4 Connection to Frequentist Estimation\nUnder certain priors and symmetric losses, Bayes rules coincide with frequentist estimators (e.g. posterior mean = MLE for flat priors).\nBayesian decision theory thus generalizes classical estimation.\n\n\n\n8.3.5 2.5 Example — Optimal Cutoff for a Diagnostic Test\nLet \\(begin:math:text\\) \\theta \\(end:math:text\\) denote disease presence (1 = disease).\nIf false negatives cost 5× more than false positives, the optimal threshold satisfies \\[\n\\frac{p_1}{p_0} &gt; \\frac{1}{5} \\;\\Rightarrow\\; p_1 &gt; 0.17.\n\\]\n\np &lt;- seq(0,1,length=200)\ndecision &lt;- ifelse(p &gt; 0.17, 1, 0)\nplot(p, decision, type=\"s\", col=\"darkorange\", lwd=2,\n     main=\"Decision Boundary with Unequal Losses\", xlab=\"Posterior P(Disease=1)\", ylab=\"Decision (1=Treat)\")\nabline(v=0.17, col=\"red\", lty=2)\nlegend(\"topleft\", legend=c(\"Decision\",\"Optimal cutoff\"), col=c(\"darkorange\",\"red\"),\n       lwd=2, lty=c(1,2), bty=\"n\")\n\n\n\n\n\n\n\n\n\n\n\n8.3.6 2.6 Summary of Bayesian Decision Theory\n\n\n\n\n\n\n\nConcept\nDescription\n\n\n\n\nLoss function\nQuantifies cost of wrong decisions\n\n\nPosterior expected loss\nAverage loss given observed data\n\n\nBayes rule\nAction minimizing posterior expected loss\n\n\nCommon losses\nSquared, absolute, 0–1\n\n\nApplications\nEstimation, hypothesis testing, classification, decision support",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Week 7 — Bayesian Decision Theory</span>"
    ]
  },
  {
    "objectID": "week07.html#homework-7",
    "href": "week07.html#homework-7",
    "title": "8  Week 7 — Bayesian Decision Theory",
    "section": "8.4 Homework 7",
    "text": "8.4 Homework 7\n\nConceptual\n\nDefine loss and risk in the Bayesian framework.\n\nWhat is the relationship between posterior mean, median, and mode under different losses?\n\nComputational\n\nSimulate data from \\(begin:math:text\\) N(\\theta,1) \\(end:math:text\\) with prior \\(begin:math:text\\) N(0,1) \\(end:math:text\\).\n\nCompute the Bayes estimator under squared loss and compare it with the MLE.\n\nRepeat using absolute loss and report the posterior median.\n\nReflection\n\nHow does changing the loss function alter your decision?\n\nGive a real-world example where asymmetric losses are important.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Week 7 — Bayesian Decision Theory</span>"
    ]
  },
  {
    "objectID": "week07.html#key-takeaways",
    "href": "week07.html#key-takeaways",
    "title": "8  Week 7 — Bayesian Decision Theory",
    "section": "8.5 Key Takeaways",
    "text": "8.5 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nDecision Theory\nProvides a unified framework linking inference to action.\n\n\nBayes Rule\nMinimizes posterior expected loss.\n\n\nCommon Losses\nSquared → mean; absolute → median; 0–1 → mode.\n\n\nApplications\nEstimation, testing, classification, optimal thresholds.\n\n\nPerspective\nInference as a special case of decision-making under uncertainty.\n\n\n\n\nNext Week: Advanced Bayesian Computation — Hamiltonian Monte Carlo (HMC) and Variational Inference.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Week 7 — Bayesian Decision Theory</span>"
    ]
  },
  {
    "objectID": "week08.html",
    "href": "week08.html",
    "title": "9  Week 8 — Advanced Bayesian Computation",
    "section": "",
    "text": "9.1 Learning Goals\nThis week explores two major developments that enable scalable Bayesian inference for complex or high-dimensional models:\nHamiltonian Monte Carlo (HMC) and Variational Inference (VI).\nWe study their principles, intuition, and practical use in software such as Stan and brms.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Week 8 — Advanced Bayesian Computation</span>"
    ]
  },
  {
    "objectID": "week08.html#learning-goals",
    "href": "week08.html#learning-goals",
    "title": "9  Week 8 — Advanced Bayesian Computation",
    "section": "",
    "text": "Explain the motivation for advanced sampling and approximation methods.\n\nDescribe the mechanics and intuition of Hamiltonian Monte Carlo.\n\nUnderstand the trade-offs between exact (MCMC) and approximate (VI) inference.\n\nRun basic HMC and VI fits using modern R interfaces.\n\nInterpret diagnostics for both approaches.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Week 8 — Advanced Bayesian Computation</span>"
    ]
  },
  {
    "objectID": "week08.html#lecture-1-hamiltonian-monte-carlo-hmc",
    "href": "week08.html#lecture-1-hamiltonian-monte-carlo-hmc",
    "title": "9  Week 8 — Advanced Bayesian Computation",
    "section": "9.2 Lecture 1 — Hamiltonian Monte Carlo (HMC)",
    "text": "9.2 Lecture 1 — Hamiltonian Monte Carlo (HMC)\n\n9.2.1 1.1 Motivation\nTraditional MCMC (e.g., Metropolis–Hastings, Gibbs) can mix slowly in high dimensions.\nHamiltonian Monte Carlo accelerates exploration by using gradient information from the log posterior to simulate physical motion through parameter space.\n\n\n\n9.2.2 1.2 Hamiltonian Dynamics\nWe introduce an auxiliary “momentum” variable \\(begin:math:text\\) p \\(end:math:text\\) and define the Hamiltonian: \\[\nH(\\theta,p) = U(\\theta) + K(p),\n\\] where\n- \\(begin:math:text\\) U(\\theta) = -\\log p(\\theta\\mid y) \\(end:math:text\\) (potential energy = negative log posterior),\n- \\(begin:math:text\\) K(p) = \\tfrac{1}{2} p^\\top M^{-1}p \\(end:math:text\\) (kinetic energy, with mass matrix \\(begin:math:text\\)M\\(end:math:text\\)).\nThe system evolves via Hamilton’s equations: \\[\n\\frac{d\\theta}{dt} = \\frac{\\partial H}{\\partial p}, \\qquad\n\\frac{dp}{dt} = -\\frac{\\partial H}{\\partial \\theta}.\n\\]\n\n\n\n9.2.3 1.3 Leapfrog Integration\nTo approximate continuous motion, HMC uses a leapfrog integrator with step size \\(begin:math:text\\) \\epsilon \\(end:math:text\\) and \\(begin:math:text\\) L \\(end:math:text\\) steps:\n\n\\(begin:math:text\\) p_{t+\\epsilon/2} = p_t - \\frac{\\epsilon}{2}\\nabla_\\theta U(\\theta_t) \\(end:math:text\\)\n\n\\(begin:math:text\\) \\theta_{t+\\epsilon} = \\theta_t + \\epsilon M^{-1}p_{t+\\epsilon/2} \\(end:math:text\\)\n\n\\(begin:math:text\\) p_{t+\\epsilon} = p_{t+\\epsilon/2} - \\frac{\\epsilon}{2}\\nabla_\\theta U(\\theta_{t+\\epsilon}) \\(end:math:text\\)\n\nAfter simulating this path, we apply a Metropolis acceptance step using the change in \\(begin:math:text\\)H\\(end:math:text\\).\n\n\n\n9.2.4 1.4 Intuition\n\nThe gradient \\(begin:math:text\\) \\nabla_\\theta U(\\theta) \\(end:math:text\\) guides proposals along high-density regions, avoiding random walk behavior.\n\nProper tuning of step size \\(begin:math:text\\) \\epsilon \\(end:math:text\\) and number of steps \\(begin:math:text\\) L \\(end:math:text\\) yields efficient exploration.\n\nModern implementations (e.g., Stan) adapt these automatically via the No-U-Turn Sampler (NUTS).\n\n\n\n\n9.2.5 1.5 Example — Logistic Regression with HMC (Stan)\n\nlibrary(brms)\nset.seed(8)\n\n# Simulated logistic data\nN &lt;- 200\nx &lt;- rnorm(N)\ny &lt;- rbinom(N, 1, plogis(-1 + 2*x))\ndat &lt;- data.frame(x, y)\n\n# Fit via Hamiltonian Monte Carlo (NUTS)\nfit_hmc &lt;- brm(y ~ x, data=dat, family=bernoulli(), chains=2, iter=2000, refresh=0)\nsummary(fit_hmc)\nplot(fit_hmc)\n\nStan’s NUTS algorithm performs automatic adaptation of step size and trajectory length.\n\n\n\n9.2.6 1.6 Diagnosing HMC Performance\nKey diagnostics: - Divergent transitions → numerical instability (reduce step size or re-scale parameters).\n- Energy Bayesian Fraction of Missing Information (E-BFMI) → low values (&lt;0.3) indicate poor exploration.\n- \\(\\widehat{R}\\) and effective sample size → check convergence and mixing.\n\nlibrary(bayesplot)\nmcmc_nuts_divergence(fit_hmc)\nmcmc_trace(fit_hmc, pars=c(\"b_Intercept\",\"b_x\"))\n\n\n\n\n9.2.7 1.7 Advantages of HMC\n\n\n\n\n\n\n\nFeature\nBenefit\n\n\n\n\nGradient-based proposals\nRapid movement through high-density regions\n\n\nHigher acceptance rates\nFewer rejections than random-walk MH\n\n\nFewer tuning parameters\nAutomatic adaptation (NUTS)\n\n\nRobust for high-dimensional models\nUsed in most modern Bayesian software",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Week 8 — Advanced Bayesian Computation</span>"
    ]
  },
  {
    "objectID": "week08.html#lecture-2-variational-inference-vi",
    "href": "week08.html#lecture-2-variational-inference-vi",
    "title": "9  Week 8 — Advanced Bayesian Computation",
    "section": "9.3 Lecture 2 — Variational Inference (VI)",
    "text": "9.3 Lecture 2 — Variational Inference (VI)\n\n9.3.1 2.1 Motivation\nWhen exact sampling is too costly (e.g., massive datasets, deep models),\nVariational Inference (VI) approximates the posterior by a simpler distribution \\(begin:math:text\\) q_\\lambda(\\theta) \\(end:math:text\\) within a parameterized family.\n\n\n\n9.3.2 2.2 Objective Function\nWe minimize the Kullback–Leibler (KL) divergence: \\[\n\\text{KL}(q_\\lambda(\\theta) \\,\\|\\, p(\\theta\\mid y))\n  = \\int q_\\lambda(\\theta)\\log\\frac{q_\\lambda(\\theta)}{p(\\theta\\mid y)}\\,d\\theta.\n\\]\nEquivalently, we maximize the Evidence Lower Bound (ELBO): \\[\n\\text{ELBO}(\\lambda)\n= E_{q_\\lambda}[\\log p(y,\\theta)] - E_{q_\\lambda}[\\log q_\\lambda(\\theta)].\n\\] The higher the ELBO, the closer \\(begin:math:text\\) q_\\lambda(\\theta) \\(end:math:text\\) is to the true posterior.\n\n\n\n9.3.3 2.3 Mean-Field Approximation\nA common simplification assumes factorization: \\[\nq_\\lambda(\\theta) = \\prod_j q_{\\lambda_j}(\\theta_j),\n\\] which allows coordinate-wise optimization of each factor.\n\n\n\n9.3.4 2.4 Example — Variational Bayes for a Normal Mean\nAssume \\(begin:math:text\\) y_i\\sim N(\\theta,1) \\(end:math:text\\) with prior \\(begin:math:text\\) \\theta\\sim N(0,1) \\(end:math:text\\).\nAnalytically, the posterior is \\(begin:math:text\\) N\\left(\\frac{n\\bar{y}}{n+1}, \\frac{1}{n+1}\\right) \\(end:math:text\\).\nWe approximate it variationally by another normal \\(begin:math:text\\) q(\\theta)=N(m,s^2) \\(end:math:text\\),\nand find \\(begin:math:text\\) m,s^2 \\(end:math:text\\) maximizing ELBO.\n\nset.seed(9)\ny &lt;- rnorm(50, mean=1)\nn &lt;- length(y)\nlog_joint &lt;- function(theta) sum(dnorm(y, theta, 1, log=TRUE)) + dnorm(theta, 0, 1, log=TRUE)\n\n# Closed-form optimal q is Normal(m,s^2) with same moments as true posterior:\nm_vi &lt;- n*mean(y)/(n+1)\ns2_vi &lt;- 1/(n+1)\nc(mean=m_vi, sd=sqrt(s2_vi))\n\n     mean        sd \n0.8884051 0.1400280 \n\n\n\n\n\n9.3.5 2.5 Automatic VI with brms\n\nlibrary(brms)\nset.seed(10)\nN &lt;- 1000\nx &lt;- rnorm(N)\ny &lt;- 2 + 1.5*x + rnorm(N)\ndat &lt;- data.frame(x,y)\n\nfit_vi &lt;- brm(y ~ x, data=dat, family=gaussian(),\n              algorithm=\"meanfield\", iter=5000, refresh=0)\nsummary(fit_vi)\n\nVI provides a fast deterministic approximation, trading off accuracy for scalability.\n\n\n\n9.3.6 2.6 Comparison: HMC vs VI\n\n\n\n\n\n\n\n\nFeature\nHMC (NUTS)\nVariational Inference\n\n\n\n\nType\nSampling (asymptotically exact)\nOptimization (approximate)\n\n\nAccuracy\nVery high\nDepends on variational family\n\n\nSpeed\nSlower\nVery fast\n\n\nDiagnostics\nConvergence via \\(\\widehat{R}\\), ESS\nELBO convergence\n\n\nUse case\nComplex or small data\nMassive or real-time problems\n\n\n\n\n\n\n9.3.7 2.7 Visual Comparison (Conceptual)\n\ntheta &lt;- seq(-3,3,length=400)\nposterior &lt;- dnorm(theta, 0, 1)              # true posterior\nvi_approx &lt;- dnorm(theta, 0, 1.5)            # wider variational approx\nplot(theta, posterior, type=\"l\", lwd=2, col=\"black\", ylim=c(0,0.5),\n     main=\"Posterior (HMC) vs Variational Approximation\",\n     ylab=\"Density\", xlab=expression(theta))\nlines(theta, vi_approx, col=\"orange\", lwd=2, lty=2)\nlegend(\"topright\", legend=c(\"Exact posterior (HMC)\",\"VI approximation\"),\n       col=c(\"black\",\"orange\"), lwd=2, lty=c(1,2), bty=\"n\")\n\n\n\n\n\n\n\n\n\n\n\n9.3.8 2.8 Practical Advice\n\nUse HMC (NUTS) as the default for accuracy and diagnostics.\n\nUse VI for large-scale models, initialization, or quick exploration.\n\nCompare results: if VI and HMC differ substantially, favor HMC.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Week 8 — Advanced Bayesian Computation</span>"
    ]
  },
  {
    "objectID": "week08.html#homework-8",
    "href": "week08.html#homework-8",
    "title": "9  Week 8 — Advanced Bayesian Computation",
    "section": "9.4 Homework 8",
    "text": "9.4 Homework 8\n\nConceptual\n\nExplain the difference between sampling-based and optimization-based inference.\n\nWhat role does the ELBO play in VI?\n\nComputational\n\nFit a simple linear regression using both HMC and VI in brms.\n\nCompare posterior means, standard deviations, and computation time.\n\nReflection\n\nIn what types of real-world problems might VI be preferred over HMC?\n\nHow would you check whether your VI approximation is adequate?",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Week 8 — Advanced Bayesian Computation</span>"
    ]
  },
  {
    "objectID": "week08.html#key-takeaways",
    "href": "week08.html#key-takeaways",
    "title": "9  Week 8 — Advanced Bayesian Computation",
    "section": "9.5 Key Takeaways",
    "text": "9.5 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nHamiltonian Monte Carlo\nUses gradients to propose efficient moves through parameter space.\n\n\nNo-U-Turn Sampler (NUTS)\nAdapts step size and trajectory automatically.\n\n\nVariational Inference\nOptimizes a tractable approximation to the posterior.\n\n\nELBO\nObjective function for VI; measures closeness to the true posterior.\n\n\nTrade-off\nHMC = accuracy, VI = speed; choice depends on model and data size.\n\n\n\n\nNext Week: Bayesian Model Averaging and Ensemble Learning — combining multiple Bayesian models for improved predictive performance.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Week 8 — Advanced Bayesian Computation</span>"
    ]
  },
  {
    "objectID": "week09.html",
    "href": "week09.html",
    "title": "10  Week 9 — Bayesian Model Averaging and Ensemble Learning",
    "section": "",
    "text": "10.1 Learning Goals\nThis week introduces Bayesian Model Averaging (BMA), a principled framework to combine inferences from multiple Bayesian models, and contrasts it with ensemble methods common in machine learning.\nWe discuss model uncertainty, predictive averaging, and practical implementations for linear regression and classification.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Week 9 — Bayesian Model Averaging and Ensemble Learning</span>"
    ]
  },
  {
    "objectID": "week09.html#learning-goals",
    "href": "week09.html#learning-goals",
    "title": "10  Week 9 — Bayesian Model Averaging and Ensemble Learning",
    "section": "",
    "text": "Explain the motivation for Bayesian Model Averaging.\n\nDerive model-averaged predictions using posterior model probabilities.\n\nCompare BMA with frequentist model selection and ML ensembles.\n\nImplement BMA for simple regression models in R.\n\nDiscuss advantages and limitations of Bayesian model combination.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Week 9 — Bayesian Model Averaging and Ensemble Learning</span>"
    ]
  },
  {
    "objectID": "week09.html#lecture-1-bayesian-model-averaging-bma",
    "href": "week09.html#lecture-1-bayesian-model-averaging-bma",
    "title": "10  Week 9 — Bayesian Model Averaging and Ensemble Learning",
    "section": "10.2 Lecture 1 — Bayesian Model Averaging (BMA)",
    "text": "10.2 Lecture 1 — Bayesian Model Averaging (BMA)\n\n10.2.1 1.1 Model Uncertainty\nModel selection often ignores uncertainty about which model is true.\nBMA accounts for this by averaging over all candidate models weighted by their posterior probabilities.\nFor models \\(begin:math:text\\) M_1, \\ldots, M_K \\(end:math:text\\): \\[\np(M_k \\mid y) = \\frac{p(y \\mid M_k)\\,p(M_k)}{\\sum_{j=1}^K p(y \\mid M_j)\\,p(M_j)}.\n\\]\nHere: - \\(begin:math:text\\) p(y \\mid M_k) \\(end:math:text\\) = marginal likelihood under model \\(begin:math:text\\) M_k \\(end:math:text\\).\n- \\(begin:math:text\\) p(M_k) \\(end:math:text\\) = prior model probability.\n- \\(begin:math:text\\) p(M_k \\mid y) \\(end:math:text\\) = posterior model probability.\n\n\n\n10.2.2 1.2 Model-Averaged Posterior and Predictions\nPosterior distribution for parameter θ: \\[\np(\\theta \\mid y) = \\sum_{k=1}^K p(\\theta \\mid y, M_k)\\,p(M_k \\mid y).\n\\]\nPosterior predictive distribution: \\[\np(\\tilde{y} \\mid y) = \\sum_{k=1}^K p(\\tilde{y} \\mid y, M_k)\\,p(M_k \\mid y).\n\\]\nBMA integrates out model uncertainty rather than conditioning on a single “best” model.\n\n\n\n10.2.3 1.3 Comparison with Model Selection\n\n\n\n\n\n\n\n\nApproach\nKey Idea\nLimitation\n\n\n\n\nModel Selection\nChoose one best model (e.g., by AIC, WAIC, LOO)\nIgnores model uncertainty\n\n\nModel Averaging\nCombine all models weighted by posterior probability\nComputationally heavier, prior sensitive\n\n\n\n\n\n\n10.2.4 1.4 Example — Two Competing Linear Models\n\nset.seed(9)\nn &lt;- 100\nx &lt;- rnorm(n)\ny &lt;- 1 + 2*x + 0.5*x^2 + rnorm(n, sd=1)\n\nm1 &lt;- lm(y ~ x)\nm2 &lt;- lm(y ~ x + I(x^2))\n\nlog_marglik1 &lt;- -AIC(m1)/2\nlog_marglik2 &lt;- -AIC(m2)/2\np_m1 &lt;- exp(log_marglik1)\np_m2 &lt;- exp(log_marglik2)\n\nw1 &lt;- p_m1 / (p_m1 + p_m2)\nw2 &lt;- p_m2 / (p_m1 + p_m2)\n\npred1 &lt;- predict(m1)\npred2 &lt;- predict(m2)\nbma_pred &lt;- w1*pred1 + w2*pred2\n\nc(weights=c(M1=w1, M2=w2)[1:2])\n\n  weights.M1   weights.M2 \n1.426496e-08 1.000000e+00 \n\n\n\nplot(x, y, pch=19, col=\"#00000055\", main=\"Bayesian Model Averaging (Linear vs Quadratic)\",\n     xlab=\"x\", ylab=\"y\")\nxs &lt;- seq(min(x), max(x), length.out=200)\nlines(xs, predict(m1, newdata=data.frame(x=xs)), col=\"steelblue\", lwd=2)\nlines(xs, predict(m2, newdata=data.frame(x=xs)), col=\"firebrick\", lwd=2)\nlines(xs, w1*predict(m1, newdata=data.frame(x=xs)) +\n          w2*predict(m2, newdata=data.frame(x=xs)),\n      col=\"darkgreen\", lwd=3, lty=2)\nlegend(\"topleft\", legend=c(\"Model 1 (linear)\",\"Model 2 (quadratic)\",\"BMA prediction\"),\n       col=c(\"steelblue\",\"firebrick\",\"darkgreen\"), lwd=c(2,2,3), lty=c(1,1,2), bty=\"n\")\n\n\n\n\nModel-averaged predictions vs. data\n\n\n\n\nInterpretation: The model-averaged prediction blends the strengths of both models, weighted by their posterior support.\n\n\n\n10.2.5 1.5 Advantages of BMA\n\nIncorporates model uncertainty directly.\n\nAvoids overconfidence from single-model conditioning.\n\nImproves predictive performance, especially in small samples.\n\nProvides model weights interpretable as probabilities.\n\n\n\n\n10.2.6 1.6 Limitations\n\nRequires marginal likelihoods (often hard to compute).\n\nSensitive to model priors and parameter priors.\n\nComputationally expensive for many models.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Week 9 — Bayesian Model Averaging and Ensemble Learning</span>"
    ]
  },
  {
    "objectID": "week09.html#lecture-2-bayesian-ensembles-and-predictive-stacking",
    "href": "week09.html#lecture-2-bayesian-ensembles-and-predictive-stacking",
    "title": "10  Week 9 — Bayesian Model Averaging and Ensemble Learning",
    "section": "10.3 Lecture 2 — Bayesian Ensembles and Predictive Stacking",
    "text": "10.3 Lecture 2 — Bayesian Ensembles and Predictive Stacking\n\n10.3.1 2.1 Beyond BMA: Ensemble Learning\nMachine learning often uses ensembles (e.g., bagging, boosting, stacking) to improve prediction.\nBayesian analogues combine predictive distributions rather than point estimates.\n\n\n\n10.3.2 2.2 Predictive Stacking\nRather than using posterior model probabilities, stacking optimizes weights to maximize predictive performance under cross-validation: \\[\nw^* = \\arg\\max_{w} \\sum_{i=1}^n \\log\\left(\\sum_k w_k\\, p(y_i \\mid y_{-i}, M_k)\\right),\n\\] subject to \\(begin:math:text\\) w_k \\ge 0 \\(end:math:text\\) and \\(begin:math:text\\) \\sum_k w_k = 1 \\(end:math:text\\).\nThis yields stacking weights that combine models for best out-of-sample prediction.\n\n\n\n10.3.3 2.3 Example — Predictive Stacking with loo\n\nlibrary(brms)\nlibrary(loo)\n\nset.seed(10)\ndat &lt;- data.frame(x = rnorm(200))\ndat$y &lt;- 1 + 2*dat$x + 0.5*dat$x^2 + rnorm(200)\n\nm1 &lt;- brm(y ~ x, data=dat, refresh=0)\nm2 &lt;- brm(y ~ x + I(x^2), data=dat, refresh=0)\n\nloo1 &lt;- loo(m1)\nloo2 &lt;- loo(m2)\n\n# Stacking weights based on LOO predictive densities\nw_stack &lt;- loo_model_weights(list(m1,m2), method=\"stacking\")\nw_pseudo &lt;- loo_model_weights(list(m1,m2), method=\"pseudobma\")\n\nw_stack\nw_pseudo\n\nInterpretation:\n- Stacking weights directly optimize predictive log-likelihood.\n- Pseudo-BMA provides a simpler (WAIC/LOO-based) approximation.\n\n\n\n10.3.4 2.4 Comparison: BMA vs Stacking\n\n\n\n\n\n\n\n\nFeature\nBayesian Model Averaging\nPredictive Stacking\n\n\n\n\nWeights\nPosterior model probabilities\nOptimized predictive weights\n\n\nGoal\nRepresent model uncertainty\nMaximize predictive performance\n\n\nComputation\nNeeds marginal likelihoods\nUses cross-validation\n\n\nPrior dependence\nSensitive\nWeak or none\n\n\nTypical use\nTheoretical coherence\nPractical prediction\n\n\n\n\n\n\n10.3.5 2.5 Ensemble Prediction Example\n\nset.seed(11)\nn &lt;- 100\nx &lt;- rnorm(n)\ny_true &lt;- 2 + 3*x - 1.5*x^2\ny &lt;- y_true + rnorm(n, sd=2)\n\nm1 &lt;- lm(y ~ x)\nm2 &lt;- lm(y ~ poly(x, 2, raw=TRUE))\n\npred_grid &lt;- seq(min(x), max(x), length=200)\np1 &lt;- predict(m1, newdata=data.frame(x=pred_grid))\np2 &lt;- predict(m2, newdata=data.frame(x=pred_grid))\n\n# Ensemble weighting (ad hoc stacking weights)\nw1 &lt;- 0.3; w2 &lt;- 0.7\np_ens &lt;- w1*p1 + w2*p2\n\nplot(x, y, pch=19, col=\"#00000055\", main=\"Model Ensemble Prediction\",\n     xlab=\"x\", ylab=\"y\")\nlines(pred_grid, p1, col=\"blue\", lwd=2)\nlines(pred_grid, p2, col=\"red\", lwd=2)\nlines(pred_grid, p_ens, col=\"darkgreen\", lwd=3, lty=2)\nlegend(\"topleft\", legend=c(\"Model 1\",\"Model 2\",\"Ensemble\"),\n       col=c(\"blue\",\"red\",\"darkgreen\"), lwd=c(2,2,3), lty=c(1,1,2), bty=\"n\")\n\n\n\n\n\n\n\n\n\n\n\n10.3.6 2.6 Practical Guidance\n\nUse BMA when posterior model probabilities are available (few models, interpretable priors).\n\nUse stacking or ensemble averaging when prediction accuracy is the goal.\n\nAvoid double counting data — always base weights on held-out or cross-validation predictive performance.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Week 9 — Bayesian Model Averaging and Ensemble Learning</span>"
    ]
  },
  {
    "objectID": "week09.html#homework-9",
    "href": "week09.html#homework-9",
    "title": "10  Week 9 — Bayesian Model Averaging and Ensemble Learning",
    "section": "10.4 Homework 9",
    "text": "10.4 Homework 9\n\nConceptual\n\nExplain how BMA differs from model selection.\n\nWhy does stacking avoid prior sensitivity found in BMA?\n\nComputational\n\nSimulate data where two Bayesian regression models compete.\n\nFit both models in R (e.g., using brms or lm).\n\nCompute stacking and pseudo-BMA weights using loo_model_weights().\n\nCompare model-averaged predictions to the true curve.\n\nReflection\n\nDiscuss when BMA and stacking might give very different results.\n\nHow can model averaging improve scientific interpretability?",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Week 9 — Bayesian Model Averaging and Ensemble Learning</span>"
    ]
  },
  {
    "objectID": "week09.html#key-takeaways",
    "href": "week09.html#key-takeaways",
    "title": "10  Week 9 — Bayesian Model Averaging and Ensemble Learning",
    "section": "10.5 Key Takeaways",
    "text": "10.5 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nBayesian Model Averaging\nCombines models weighted by posterior probabilities.\n\n\nPredictive Stacking\nChooses weights that maximize predictive accuracy via cross-validation.\n\n\nModel Uncertainty\nAccounted for rather than ignored.\n\n\nPractical Use\nBMA for interpretability; stacking for prediction.\n\n\nModern Tools\nloo_model_weights() in R provides both stacking and pseudo-BMA weights.\n\n\n\n\nNext Week: Bayesian Nonparametrics — infinite-dimensional models such as Dirichlet processes and Gaussian processes for flexible Bayesian modeling.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Week 9 — Bayesian Model Averaging and Ensemble Learning</span>"
    ]
  },
  {
    "objectID": "week10.html",
    "href": "week10.html",
    "title": "11  Week 10 — Bayesian Nonparametrics",
    "section": "",
    "text": "11.1 Learning Goals\nThis week introduces Bayesian Nonparametric (BNP) models, which allow infinite flexibility in representing uncertainty about functions, densities, or model structure.\nWe focus on two cornerstone approaches: Dirichlet Processes for mixture modeling and clustering, and Gaussian Processes for regression on functions.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Week 10 — Bayesian Nonparametrics</span>"
    ]
  },
  {
    "objectID": "week10.html#learning-goals",
    "href": "week10.html#learning-goals",
    "title": "11  Week 10 — Bayesian Nonparametrics",
    "section": "",
    "text": "Explain the motivation for nonparametric Bayesian models.\n\nDescribe the Dirichlet Process and its stick-breaking and Chinese Restaurant representations.\n\nExplain how DP mixture models perform clustering automatically.\n\nUnderstand Gaussian Processes for function estimation.\n\nImplement simple DP and GP examples in R using available packages.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Week 10 — Bayesian Nonparametrics</span>"
    ]
  },
  {
    "objectID": "week10.html#lecture-1-dirichlet-process-models",
    "href": "week10.html#lecture-1-dirichlet-process-models",
    "title": "11  Week 10 — Bayesian Nonparametrics",
    "section": "11.2 Lecture 1 — Dirichlet Process Models",
    "text": "11.2 Lecture 1 — Dirichlet Process Models\n\n11.2.1 1.1 Motivation\nClassical parametric models fix the number of parameters (e.g., number of clusters).\nDirichlet Processes (DPs) let the data decide model complexity by placing a prior on infinite mixture components.\n\n\n\n11.2.2 1.2 The Dirichlet Process\nA Dirichlet Process \\(begin:math:text\\) \\text{DP}(\\alpha, G_0) \\(end:math:text\\) is a distribution over distributions such that,\nfor any partition \\(begin:math:text\\) A_1, \\ldots, A_k \\(end:math:text\\) of the space, \\[\n(G(A_1),\\ldots,G(A_k)) \\sim \\text{Dirichlet}(\\alpha G_0(A_1), \\ldots, \\alpha G_0(A_k)).\n\\]\n\n\\(begin:math:text\\) G_0 \\(end:math:text\\): base (prior mean) distribution.\n\n\\(begin:math:text\\) \\alpha \\(end:math:text\\): concentration parameter controlling clustering strength.\n\nAs \\(begin:math:text\\) \\alpha \\to 0 \\(end:math:text\\): few clusters (more sharing).\nAs \\(begin:math:text\\) \\alpha \\to \\infty \\(end:math:text\\): many clusters (approaches \\(begin:math:text\\) G_0 \\(end:math:text\\)).\n\n\n\n11.2.3 1.3 Stick-Breaking Representation\nA constructive definition (Sethuraman, 1994): \\[\nG = \\sum_{k=1}^{\\infty} \\pi_k \\delta_{\\theta_k}, \\quad\n\\theta_k \\sim G_0, \\quad\n\\pi_k = v_k \\prod_{l&lt;k}(1-v_l), \\quad\nv_k \\sim \\text{Beta}(1,\\alpha).\n\\]\nThe weights \\(begin:math:text\\) \\pi_k \\(end:math:text\\) form an infinite sequence summing to 1 — conceptually “breaking a stick” into random lengths.\n\n\n\n11.2.4 1.4 DP Mixture Model\nFor data \\(begin:math:text\\) y_1,\\ldots,y_n \\(end:math:text\\): \\[\ny_i \\mid \\theta_i \\sim F(\\theta_i), \\qquad\n\\theta_i \\mid G \\sim G, \\qquad\nG \\sim \\text{DP}(\\alpha, G_0).\n\\]\nMarginally, this induces clustering because multiple \\(begin:math:text\\) y_i \\(end:math:text\\) can share the same \\(begin:math:text\\) \\theta_i \\(end:math:text\\).\n\n\n\n11.2.5 1.5 Chinese Restaurant Process (CRP)\nEquivalent generative process:\n\nCustomer 1 starts a new table.\n\nCustomer \\(begin:math:text\\) i \\(end:math:text\\) joins an existing table \\(begin:math:text\\) k \\(end:math:text\\) with probability\n\\(begin:math:text\\) n_k / (\\alpha + i - 1) \\(end:math:text\\),\nor starts a new one with probability \\(begin:math:text\\) \\alpha / (\\alpha + i - 1) \\(end:math:text\\).\n\nThis describes how clusters grow adaptively as data arrive.\n\n\n\n11.2.6 1.6 Example — Simulated DP Mixture of Normals\n\nset.seed(10)\nlibrary(dirichletprocess)\n\n# Generate mixture data\ny &lt;- c(rnorm(50, -3, 0.5), rnorm(50, 3, 0.5))\n\n# Fit a Dirichlet Process Gaussian Mixture\ndp &lt;- DirichletProcessGaussian(y)\ndp &lt;- Fit(dp, its = 2000)\n\n# Cluster assignments\nplot(dp) + ggplot2::ggtitle(\"Dirichlet Process Gaussian Mixture\")\n\nWarning: `aes_()` was deprecated in ggplot2 3.0.0.\nℹ Please use tidy evaluation idioms with `aes()`\nℹ The deprecated feature was likely used in the dirichletprocess package.\n  Please report the issue at\n  &lt;https://github.com/dm13450/dirichletprocess/issues&gt;.\n\n\n\n\n\n\n\n\n\nInterpretation: the DP mixture automatically discovers clusters without specifying their number in advance.\n\n\n\n11.2.7 1.7 Practical Notes\n\nThe posterior number of clusters depends on \\(begin:math:text\\) \\alpha \\(end:math:text\\) and data separation.\n\nInference via Gibbs sampling or variational truncation.\n\nExtensions: Hierarchical DP, DP regression, and DP topic models.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Week 10 — Bayesian Nonparametrics</span>"
    ]
  },
  {
    "objectID": "week10.html#lecture-2-gaussian-processes-for-regression",
    "href": "week10.html#lecture-2-gaussian-processes-for-regression",
    "title": "11  Week 10 — Bayesian Nonparametrics",
    "section": "11.3 Lecture 2 — Gaussian Processes for Regression",
    "text": "11.3 Lecture 2 — Gaussian Processes for Regression\n\n11.3.1 2.1 Motivation\nA Gaussian Process (GP) defines a prior directly over functions, enabling flexible nonlinear regression without specifying a parametric form.\n\n\n\n11.3.2 2.2 Definition\nA GP is a collection of random variables \\(begin:math:text\\) f(x) \\(end:math:text\\) such that every finite subset has a joint multivariate normal distribution: \\[\nf(x) \\sim \\text{GP}(m(x), k(x,x')),\n\\] where\n- \\(begin:math:text\\) m(x) = E[f(x)] \\(end:math:text\\): mean function,\n- \\(begin:math:text\\) k(x,x’) = \\text{Cov}(f(x),f(x’)) \\(end:math:text\\): covariance (kernel) function.\n\n\n\n11.3.3 2.3 GP Regression Model\nFor data \\(begin:math:text\\) (x_i, y_i) \\(end:math:text\\): \\[\ny_i = f(x_i) + \\varepsilon_i, \\quad \\varepsilon_i \\sim \\mathcal{N}(0, \\sigma^2).\n\\] Posterior of \\(begin:math:text\\) f(x) \\(end:math:text\\) given \\(begin:math:text\\) y \\(end:math:text\\): \\[\nf_* \\mid y, X, X_* \\sim \\mathcal{N}(\\bar{f}_*, \\text{Cov}(f_*)),\n\\] where the mean and covariance are computed using kernel matrices.\n\n\n\n11.3.4 2.4 Common Kernels\n\n\n\n\n\n\n\n\nKernel\nFormula\nProperty\n\n\n\n\nSquared Exponential\n\\(begin:math:text\\) k(x,x’) = \\tau^2 \\exp\\!\\left(-\\frac{(x-x’)2}{2\\ell2}\\right) \\(end:math:text\\)\nSmooth, infinitely differentiable\n\n\nMatérn\n\\(begin:math:text\\) k(x,x’) = \\tau^2 \\frac{2^{1-\\nu}}{\\Gamma(\\nu)}(\\sqrt{2\\nu}\nx-x’\n\n\nPeriodic\n\\(begin:math:text\\) k(x,x’) = \\tau2\\exp(-2\\sin2(\\pi\nx-x’\n\n\n\n\n\n\n11.3.5 2.5 Example — Gaussian Process Regression in R\n\nlibrary(GPfit)\nset.seed(11)\n\nx &lt;- seq(-3, 3, length.out = 50)\ny &lt;- sin(x) + rnorm(50, sd = 0.2)\n\n# Make X a column matrix (good practice for GPfit)\ngp_model &lt;- GP_fit(X = matrix(x, ncol = 1), Y = y)\n\nWarning in GP_fit(X = matrix(x, ncol = 1), Y = y): X should be in range (0, 1)\n\nplot(gp_model)\n\n\n\n\n\n\n\n\n\npred_grid &lt;- seq(-3, 3, length.out = 200)\npred &lt;- predict(gp_model, xnew = matrix(pred_grid, ncol = 1))\n\nyhat &lt;- as.numeric(pred$Y_hat)\nse   &lt;- sqrt(as.numeric(pred$MSE))  # MSE is a variance vector; no diag()\n\nplot(x, y, pch = 19, col = \"#00000055\",\n     main = \"Gaussian Process Regression\", xlab = \"x\", ylab = \"y\")\nlines(pred_grid, yhat, lwd = 2, col = \"darkorange\")\nlines(pred_grid, yhat + 2*se, lty = 2, col = \"gray40\")\nlines(pred_grid, yhat - 2*se, lty = 2, col = \"gray40\")\n\n\n\n\nGaussian Process Regression Fit\n\n\n\n\nInterpretation: the GP posterior mean tracks the true function smoothly, with uncertainty quantified by the shaded region.\n\n\n\n11.3.6 2.6 GP vs DP: Comparison\n\n\n\n\n\n\n\n\nAspect\nDirichlet Process\nGaussian Process\n\n\n\n\nDomain\nDistributions / Clusters\nFunctions\n\n\nOutput\nDiscrete clustering\nContinuous regression\n\n\nFlexibility\nUnknown number of components\nInfinite function space\n\n\nTypical Use\nDensity estimation, mixture modeling\nNonlinear regression, spatial data\n\n\n\n\n\n\n11.3.7 2.7 Practical Considerations\n\nGP computational cost is \\(begin:math:text\\) O(n^3) \\(end:math:text\\); use sparse or inducing-point approximations for large \\(begin:math:text\\)n\\(end:math:text\\).\n\nChoice of kernel determines function smoothness and inductive bias.\n\nIn practice, hyperparameters (e.g., \\(begin:math:text\\) \\ell, \\tau \\(end:math:text\\)) are learned via marginal likelihood maximization.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Week 10 — Bayesian Nonparametrics</span>"
    ]
  },
  {
    "objectID": "week10.html#homework-10",
    "href": "week10.html#homework-10",
    "title": "11  Week 10 — Bayesian Nonparametrics",
    "section": "11.4 Homework 10",
    "text": "11.4 Homework 10\n\nConceptual\n\nCompare the roles of \\(begin:math:text\\) \\alpha \\(end:math:text\\) in DP and the kernel parameters in GP.\n\nExplain the difference between parametric and nonparametric Bayesian models.\n\nComputational\n\nSimulate data from two Gaussian clusters and fit a DP mixture model using dirichletprocess.\n\nFit a GP regression to noisy sinusoidal data using GPfit.\n\nPlot both model fits and discuss flexibility.\n\nReflection\n\nWhen might nonparametric models be overkill?\n\nHow could hierarchical extensions of DP or GP handle grouped data?",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Week 10 — Bayesian Nonparametrics</span>"
    ]
  },
  {
    "objectID": "week10.html#key-takeaways",
    "href": "week10.html#key-takeaways",
    "title": "11  Week 10 — Bayesian Nonparametrics",
    "section": "11.5 Key Takeaways",
    "text": "11.5 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nDirichlet Process\nPrior over distributions enabling infinite mixture models.\n\n\nStick-Breaking Construction\nRepresents DP as weighted infinite discrete components.\n\n\nChinese Restaurant Process\nIntuitive clustering interpretation of DP.\n\n\nGaussian Process\nDefines prior over functions for regression and smoothing.\n\n\nCommon Feature\nBoth model complexity grows with data — no fixed parameter dimension.\n\n\n\n\nNext Week: Bayesian Time Series and State-Space Models — dynamic modeling and sequential inference using Bayesian methods.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Week 10 — Bayesian Nonparametrics</span>"
    ]
  },
  {
    "objectID": "week11.html",
    "href": "week11.html",
    "title": "12  Week 11 — Bayesian Time Series and State-Space Models",
    "section": "",
    "text": "12.1 Learning Goals\nThis week introduces Bayesian approaches to time series analysis and state-space modeling, which unify filtering, forecasting, and dynamic parameter estimation under a probabilistic framework.\nWe study both classical dynamic linear models (DLMs) and modern Bayesian filtering methods.\nBy the end of this week, you should be able to:",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Week 11 — Bayesian Time Series and State-Space Models</span>"
    ]
  },
  {
    "objectID": "week11.html#learning-goals",
    "href": "week11.html#learning-goals",
    "title": "12  Week 11 — Bayesian Time Series and State-Space Models",
    "section": "",
    "text": "Formulate Bayesian dynamic models for time series data.\n\nUnderstand latent (state) variable representations.\n\nApply Bayesian updating and filtering for sequential data.\n\nImplement simple state-space and autoregressive models in R.\n\nInterpret uncertainty propagation over time.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Week 11 — Bayesian Time Series and State-Space Models</span>"
    ]
  },
  {
    "objectID": "week11.html#lecture-1-dynamic-linear-models-dlms",
    "href": "week11.html#lecture-1-dynamic-linear-models-dlms",
    "title": "12  Week 11 — Bayesian Time Series and State-Space Models",
    "section": "12.2 Lecture 1 — Dynamic Linear Models (DLMs)",
    "text": "12.2 Lecture 1 — Dynamic Linear Models (DLMs)\n\n12.2.1 1.1 Motivation\nTime series exhibit temporal dependence.\nDynamic models describe how latent states evolve over time and how observations depend on those states: \\[\n\\text{State equation: } \\theta_t = G_t \\theta_{t-1} + \\omega_t, \\quad \\omega_t \\sim N(0,W_t),\n\\] \\[\n\\text{Observation equation: } y_t = F_t^\\top \\theta_t + \\nu_t, \\quad \\nu_t \\sim N(0,V_t).\n\\]\nHere,\n- \\(begin:math:text\\) \\theta_t \\(end:math:text\\): latent state vector,\n- \\(begin:math:text\\) y_t \\(end:math:text\\): observed data,\n- \\(begin:math:text\\) G_t, F_t \\(end:math:text\\): known system matrices,\n- \\(begin:math:text\\) W_t, V_t \\(end:math:text\\): process and observation noise covariances.\n\n\n\n12.2.2 1.2 Bayesian Updating\nGiven data up to time \\(begin:math:text\\)t-1\\(end:math:text\\), the prior for \\(begin:math:text\\)\\theta_t\\(end:math:text\\) is: \\[\np(\\theta_t \\mid y_{1:t-1}) = N(a_t, R_t),\n\\] where\n\\(begin:math:text\\) a_t = G_t m_{t-1} \\(end:math:text\\),\n\\(begin:math:text\\) R_t = G_t C_{t-1} G_t^\\top + W_t \\(end:math:text\\).\nAfter observing \\(begin:math:text\\) y_t \\(end:math:text\\): \\[\np(\\theta_t \\mid y_{1:t}) = N(m_t, C_t),\n\\] where\n\\(begin:math:text\\) m_t = a_t + A_t (y_t - F_t^\\top a_t) \\(end:math:text\\),\n\\(begin:math:text\\) C_t = R_t - A_t F_t^\\top R_t \\(end:math:text\\),\nand \\(begin:math:text\\) A_t = R_t F_t (F_t^\\top R_t F_t + V_t)^{-1} \\(end:math:text\\) is the Kalman gain.\n\n\n\n12.2.3 1.3 Example — Local Level Model\nSimplest DLM: \\[\ny_t = \\theta_t + \\nu_t, \\quad \\theta_t = \\theta_{t-1} + \\omega_t,\n\\] with \\(begin:math:text\\) \\nu_t \\sim N(0,V) \\(end:math:text\\), \\(begin:math:text\\) \\omega_t \\sim N(0,W) \\(end:math:text\\).\n\nset.seed(11)\nn &lt;- 100\ntheta &lt;- numeric(n); y &lt;- numeric(n)\ntheta[1] &lt;- 0\nfor (t in 2:n) theta[t] &lt;- theta[t-1] + rnorm(1, 0, 0.2)\ny &lt;- theta + rnorm(n, 0, 0.5)\nplot.ts(cbind(y, theta), col=c(\"black\",\"blue\"), lwd=2,\n        main=\"Local Level Model: True State vs Observed y\", ylab=\"\")\nlegend(\"topleft\", legend=c(\"Observed y\",\"True θ\"), col=c(\"black\",\"blue\"), lwd=2, bty=\"n\")\n\n\n\n\n\n\n\n\n\n\n\n12.2.4 1.4 Filtering with the Kalman Algorithm\nWe estimate the evolving state mean \\(begin:math:text\\) m_t \\(end:math:text\\) recursively:\n\nm &lt;- numeric(n); C &lt;- numeric(n)\nm[1] &lt;- 0; C[1] &lt;- 1\nV &lt;- 0.5^2; W &lt;- 0.2^2\n\nfor (t in 2:n) {\n  a &lt;- m[t-1]\n  R &lt;- C[t-1] + W\n  A &lt;- R / (R + V)\n  m[t] &lt;- a + A * (y[t] - a)\n  C[t] &lt;- (1 - A) * R\n}\n\nplot.ts(cbind(y, m), col=c(\"black\",\"red\"), lwd=2,\n        main=\"Kalman Filter Estimate of Latent State\", ylab=\"\")\nlegend(\"topleft\", legend=c(\"Observed y\",\"Filtered mean m_t\"),\n       col=c(\"black\",\"red\"), lwd=2, bty=\"n\")\n\n\n\n\n\n\n\n\nThe red line tracks the smoothed latent process inferred from noisy data.\n\n\n\n12.2.5 1.5 Forecasting and Uncertainty\nPredictive distribution for the next observation: \\[\ny_{t+1} \\mid y_{1:t} \\sim N(F_{t+1}^\\top a_{t+1}, F_{t+1}^\\top R_{t+1} F_{t+1} + V_{t+1}).\n\\]\nForecast variance increases as the state uncertainty grows over time.\n\n\n\n12.2.6 1.6 Advantages of Bayesian DLMs\n\nNaturally handle missing observations.\n\nFlexible hierarchical extensions (time-varying parameters).\n\nProbabilistic forecasting with credible intervals.\n\nOnline updating suitable for real-time applications.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Week 11 — Bayesian Time Series and State-Space Models</span>"
    ]
  },
  {
    "objectID": "week11.html#lecture-2-state-space-models-and-bayesian-filtering",
    "href": "week11.html#lecture-2-state-space-models-and-bayesian-filtering",
    "title": "12  Week 11 — Bayesian Time Series and State-Space Models",
    "section": "12.3 Lecture 2 — State-Space Models and Bayesian Filtering",
    "text": "12.3 Lecture 2 — State-Space Models and Bayesian Filtering\n\n12.3.1 2.1 General State-Space Models\nGeneral form: \\[\nx_t = f(x_{t-1}) + \\omega_t, \\qquad y_t = g(x_t) + \\nu_t,\n\\] where \\(begin:math:text\\) f \\(end:math:text\\) and \\(begin:math:text\\) g \\(end:math:text\\) may be nonlinear or non-Gaussian.\nExamples: stochastic volatility, epidemic dynamics, tracking models.\n\n\n\n12.3.2 2.2 Bayesian Filtering\nWe recursively compute: \\[\np(x_t \\mid y_{1:t}) \\propto p(y_t \\mid x_t)\\int p(x_t \\mid x_{t-1})\\,p(x_{t-1}\\mid y_{1:t-1})\\,dx_{t-1}.\n\\]\nClosed forms exist only for linear-Gaussian models (Kalman).\nOtherwise, approximate methods are required: - Particle Filtering (Sequential Monte Carlo).\n- Extended Kalman Filter (linearization).\n- Unscented Kalman Filter (deterministic sampling).\n\n\n\n12.3.3 2.3 Particle Filtering (Sequential Monte Carlo)\nIdea: Represent \\(begin:math:text\\) p(x_t\\mid y_{1:t}) \\(end:math:text\\) by weighted particles \\(begin:math:text\\) \\{x_t^{(i)}, w_t^{(i)}\\} \\(end:math:text\\).\n\nPrediction: Sample \\(begin:math:text\\) x_t^{(i)} \\sim p(x_t\\mid x_{t-1}^{(i)}) \\(end:math:text\\).\n\nWeighting: \\(begin:math:text\\) w_t^{(i)} \\propto p(y_t\\mid x_t^{(i)}) \\(end:math:text\\).\n\nResampling: Normalize and resample particles based on \\(begin:math:text\\) w_t^{(i)} \\(end:math:text\\).\n\nAs \\(begin:math:text\\) N \\to \\infty \\(end:math:text\\), the empirical distribution approximates the true posterior.\n\n\n\n12.3.4 2.4 Example — Particle Filter for a Simple Nonlinear Model\n\nset.seed(12)\nn &lt;- 50; Np &lt;- 500\nx_true &lt;- numeric(n); y &lt;- numeric(n)\nx_true[1] &lt;- 0\nfor (t in 2:n) x_true[t] &lt;- 0.7*x_true[t-1] + rnorm(1,0,0.5)\ny &lt;- x_true^2/2 + rnorm(n,0,0.2)\n\n# Initialize particles\nx_pf &lt;- matrix(0, nrow=n, ncol=Np)\nw &lt;- matrix(1/Np, nrow=n, ncol=Np)\nx_pf[1,] &lt;- rnorm(Np, 0, 1)\n\nfor (t in 2:n) {\n  # Propagate\n  x_pf[t,] &lt;- 0.7*x_pf[t-1,] + rnorm(Np,0,0.5)\n  # Weight\n  w[t,] &lt;- dnorm(y[t], mean=x_pf[t,]^2/2, sd=0.2)\n  w[t,] &lt;- w[t,]/sum(w[t,])\n  # Resample\n  idx &lt;- sample(1:Np, Np, replace=TRUE, prob=w[t,])\n  x_pf[t,] &lt;- x_pf[t,idx]\n}\n\nx_est &lt;- colMeans(x_pf)\nplot.ts(cbind(y, x_true, x_est), col=c(\"black\",\"blue\",\"red\"), lwd=2,\n        main=\"Particle Filter Tracking\", ylab=\"\")\nlegend(\"topleft\", legend=c(\"Observed y\",\"True state\",\"PF estimate\"),\n       col=c(\"black\",\"blue\",\"red\"), lwd=2, bty=\"n\")\n\n\n\n\n\n\n\n\nThe particle filter captures nonlinear state dynamics unavailable to standard Kalman filtering.\n\n\n\n12.3.5 2.5 Extensions and Modern Bayesian State Models\n\nDynamic GLMs for count or binary data.\n\nStochastic Volatility Models in finance.\n\nDynamic Factor Models for multivariate time series.\n\nBayesian Structural Time Series (BSTS) — trend + seasonality decomposition.\n\n\nlibrary(bsts)\ndata(Seatbelts)\ny &lt;- Seatbelts[,\"drivers\"]\nss &lt;- AddLocalLevel(list(), y)\nbsts_fit &lt;- bsts(y ~ 1, state.specification = ss, niter = 2000)\nplot(bsts_fit)\n\n\n\n\n12.3.6 2.6 Practical Considerations\n\nChoose priors for \\(begin:math:text\\) V_t, W_t \\(end:math:text\\) that balance smoothness and responsiveness.\n\nUse HMC or SMC samplers for full Bayesian inference.\n\nCheck convergence and predictive calibration through one-step-ahead forecasts.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Week 11 — Bayesian Time Series and State-Space Models</span>"
    ]
  },
  {
    "objectID": "week11.html#homework-11",
    "href": "week11.html#homework-11",
    "title": "12  Week 11 — Bayesian Time Series and State-Space Models",
    "section": "12.4 Homework 11",
    "text": "12.4 Homework 11\n\nConceptual\n\nExplain the difference between filtering and smoothing in Bayesian time series analysis.\n\nWhen does the Kalman filter provide exact inference?\n\nComputational\n\nSimulate a local-level model and implement a Kalman filter in R.\n\nExtend it with time-varying variance or drift.\n\nCompare filtered estimates to true latent states.\n\nReflection\n\nHow does particle filtering generalize the Kalman filter?\n\nDiscuss a potential application of Bayesian state-space modeling in your field.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Week 11 — Bayesian Time Series and State-Space Models</span>"
    ]
  },
  {
    "objectID": "week11.html#key-takeaways",
    "href": "week11.html#key-takeaways",
    "title": "12  Week 11 — Bayesian Time Series and State-Space Models",
    "section": "12.5 Key Takeaways",
    "text": "12.5 Key Takeaways\n\n\n\n\n\n\n\nConcept\nSummary\n\n\n\n\nDynamic Linear Model (DLM)\nLinear-Gaussian state-space model solved by Kalman filter.\n\n\nKalman Filter\nSequential Bayesian updating for latent states.\n\n\nParticle Filter\nSimulation-based approach for nonlinear or non-Gaussian models.\n\n\nForecasting\nNaturally derived from predictive posterior distribution.\n\n\nExtensions\nBSTS, stochastic volatility, dynamic regression, multivariate models.\n\n\n\n\nNext Week: Hierarchical Bayesian Inference for Complex Systems — multi-level time series and dynamic hierarchical modeling.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Week 11 — Bayesian Time Series and State-Space Models</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "13  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  }
]